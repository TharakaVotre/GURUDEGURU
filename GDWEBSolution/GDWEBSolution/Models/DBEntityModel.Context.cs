//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GDWEBSolution.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SchoolMGTEntitiesConnectionString : DbContext
    {
        public SchoolMGTEntitiesConnectionString()
            : base("name=SchoolMGTEntitiesConnectionString")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<tblApplicationStatu> tblApplicationStatus { get; set; }
        public DbSet<tblAssignmentDueDate> tblAssignmentDueDates { get; set; }
        public DbSet<tblAssignmentHeader> tblAssignmentHeaders { get; set; }
        public DbSet<tblAssignmentQuestionAid> tblAssignmentQuestionAids { get; set; }
        public DbSet<tblAssignmentQuestionAnswer> tblAssignmentQuestionAnswers { get; set; }
        public DbSet<tblAssignmentQuestionType> tblAssignmentQuestionTypes { get; set; }
        public DbSet<tblAssingmentQuestion> tblAssingmentQuestions { get; set; }
        public DbSet<tblClass> tblClasses { get; set; }
        public DbSet<tblClassTeacher> tblClassTeachers { get; set; }
        public DbSet<tblDaysOfWeek> tblDaysOfWeeks { get; set; }
        public DbSet<tblDistrict> tblDistricts { get; set; }
        public DbSet<tblDivision> tblDivisions { get; set; }
        public DbSet<tblEntranceApplication> tblEntranceApplications { get; set; }
        public DbSet<tblEvaluationDetail> tblEvaluationDetails { get; set; }
        public DbSet<tblEvaluationHeader> tblEvaluationHeaders { get; set; }
        public DbSet<tblEvaluationResult> tblEvaluationResults { get; set; }
        public DbSet<tblEvaluationType> tblEvaluationTypes { get; set; }
        public DbSet<tblEventCalendar> tblEventCalendars { get; set; }
        public DbSet<tblEventcategory> tblEventcategories { get; set; }
        public DbSet<tblEventParticipant> tblEventParticipants { get; set; }
        public DbSet<tblExtraCurricularActivity> tblExtraCurricularActivities { get; set; }
        public DbSet<tblFunction> tblFunctions { get; set; }
        public DbSet<tblGrade> tblGrades { get; set; }
        public DbSet<tblGradeSubject> tblGradeSubjects { get; set; }
        public DbSet<tblHouse> tblHouses { get; set; }
        public DbSet<tblMessageType> tblMessageTypes { get; set; }
        public DbSet<tblParameter> tblParameters { get; set; }
        public DbSet<tblParent> tblParents { get; set; }
        public DbSet<tblParentObservationType> tblParentObservationTypes { get; set; }
        public DbSet<tblParentStudent> tblParentStudents { get; set; }
        public DbSet<tblParentToSchollMessageAttachment> tblParentToSchollMessageAttachments { get; set; }
        public DbSet<tblParentToSchoolMessageDetail> tblParentToSchoolMessageDetails { get; set; }
        public DbSet<tblParentToSchoolMessageHeader> tblParentToSchoolMessageHeaders { get; set; }
        public DbSet<tblProvince> tblProvinces { get; set; }
        public DbSet<tblQualification> tblQualifications { get; set; }
        public DbSet<tblRelashionship> tblRelashionships { get; set; }
        public DbSet<tblSchool> tblSchools { get; set; }
        public DbSet<tblSchoolCalendar> tblSchoolCalendars { get; set; }
        public DbSet<tblSchoolCategory> tblSchoolCategories { get; set; }
        public DbSet<tblSchoolExtraCurricularActivity> tblSchoolExtraCurricularActivities { get; set; }
        public DbSet<tblSchoolGrade> tblSchoolGrades { get; set; }
        public DbSet<tblSchoolGroup> tblSchoolGroups { get; set; }
        public DbSet<tblSchoolRank> tblSchoolRanks { get; set; }
        public DbSet<tblSchoolSubject> tblSchoolSubjects { get; set; }
        public DbSet<tblSchoolToParentMessageDetail> tblSchoolToParentMessageDetails { get; set; }
        public DbSet<tblSchoolToParentMessageHeader> tblSchoolToParentMessageHeaders { get; set; }
        public DbSet<tblStudent> tblStudents { get; set; }
        public DbSet<tblStudentExtraCurricularActivity> tblStudentExtraCurricularActivities { get; set; }
        public DbSet<tblStudentHistory> tblStudentHistories { get; set; }
        public DbSet<tblStudentOptionalSubject> tblStudentOptionalSubjects { get; set; }
        public DbSet<tblSubject> tblSubjects { get; set; }
        public DbSet<tblSubjectCategory> tblSubjectCategories { get; set; }
        public DbSet<tblTeacher> tblTeachers { get; set; }
        public DbSet<tblTeacherCategory> tblTeacherCategories { get; set; }
        public DbSet<tblTeacherExtraCurricularActivity> tblTeacherExtraCurricularActivities { get; set; }
        public DbSet<tblTeacherQualification> tblTeacherQualifications { get; set; }
        public DbSet<tblTeacherSchool> tblTeacherSchools { get; set; }
        public DbSet<tblTeacherSubject> tblTeacherSubjects { get; set; }
        public DbSet<tblTimeTable> tblTimeTables { get; set; }
        public DbSet<tblUser> tblUsers { get; set; }
        public DbSet<tblUserCategory> tblUserCategories { get; set; }
        public DbSet<tblUserCategoryFunction> tblUserCategoryFunctions { get; set; }
    
        public virtual ObjectResult<DCISgetSchool_Result> DCISgetSchool()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DCISgetSchool_Result>("DCISgetSchool");
        }
    
        public virtual int DCISModifySchool(string schoolId, Nullable<long> schoolGroup, string schoolName, Nullable<int> schoolRank, string isActive, Nullable<int> division, Nullable<int> district, string description, string modifiedBy, string address1, string address2, string address3, string email, string fax, string imagePath, Nullable<int> minuteforPeriod, string telephone, Nullable<int> schoolCategory, Nullable<int> province, string webUrl, string logoPath)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var schoolGroupParameter = schoolGroup.HasValue ?
                new ObjectParameter("SchoolGroup", schoolGroup) :
                new ObjectParameter("SchoolGroup", typeof(long));
    
            var schoolNameParameter = schoolName != null ?
                new ObjectParameter("SchoolName", schoolName) :
                new ObjectParameter("SchoolName", typeof(string));
    
            var schoolRankParameter = schoolRank.HasValue ?
                new ObjectParameter("SchoolRank", schoolRank) :
                new ObjectParameter("SchoolRank", typeof(int));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var divisionParameter = division.HasValue ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("Address3", address3) :
                new ObjectParameter("Address3", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var minuteforPeriodParameter = minuteforPeriod.HasValue ?
                new ObjectParameter("MinuteforPeriod", minuteforPeriod) :
                new ObjectParameter("MinuteforPeriod", typeof(int));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var schoolCategoryParameter = schoolCategory.HasValue ?
                new ObjectParameter("SchoolCategory", schoolCategory) :
                new ObjectParameter("SchoolCategory", typeof(int));
    
            var provinceParameter = province.HasValue ?
                new ObjectParameter("Province", province) :
                new ObjectParameter("Province", typeof(int));
    
            var webUrlParameter = webUrl != null ?
                new ObjectParameter("WebUrl", webUrl) :
                new ObjectParameter("WebUrl", typeof(string));
    
            var logoPathParameter = logoPath != null ?
                new ObjectParameter("LogoPath", logoPath) :
                new ObjectParameter("LogoPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DCISModifySchool", schoolIdParameter, schoolGroupParameter, schoolNameParameter, schoolRankParameter, isActiveParameter, divisionParameter, districtParameter, descriptionParameter, modifiedByParameter, address1Parameter, address2Parameter, address3Parameter, emailParameter, faxParameter, imagePathParameter, minuteforPeriodParameter, telephoneParameter, schoolCategoryParameter, provinceParameter, webUrlParameter, logoPathParameter);
        }
    
        public virtual int DCISsetSchool(string schoolId, Nullable<long> schoolGroup, string schoolName, Nullable<int> schoolRank, string isActive, Nullable<int> division, Nullable<int> district, string description, string createdBy, string address1, string address2, string address3, string email, string fax, string imagePath, Nullable<int> minuteforPeriod, string telephone, Nullable<int> schoolCategory, Nullable<int> province, string webUrl, string logoPath)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var schoolGroupParameter = schoolGroup.HasValue ?
                new ObjectParameter("SchoolGroup", schoolGroup) :
                new ObjectParameter("SchoolGroup", typeof(long));
    
            var schoolNameParameter = schoolName != null ?
                new ObjectParameter("SchoolName", schoolName) :
                new ObjectParameter("SchoolName", typeof(string));
    
            var schoolRankParameter = schoolRank.HasValue ?
                new ObjectParameter("SchoolRank", schoolRank) :
                new ObjectParameter("SchoolRank", typeof(int));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var divisionParameter = division.HasValue ?
                new ObjectParameter("Division", division) :
                new ObjectParameter("Division", typeof(int));
    
            var districtParameter = district.HasValue ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("Address3", address3) :
                new ObjectParameter("Address3", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var minuteforPeriodParameter = minuteforPeriod.HasValue ?
                new ObjectParameter("MinuteforPeriod", minuteforPeriod) :
                new ObjectParameter("MinuteforPeriod", typeof(int));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var schoolCategoryParameter = schoolCategory.HasValue ?
                new ObjectParameter("SchoolCategory", schoolCategory) :
                new ObjectParameter("SchoolCategory", typeof(int));
    
            var provinceParameter = province.HasValue ?
                new ObjectParameter("Province", province) :
                new ObjectParameter("Province", typeof(int));
    
            var webUrlParameter = webUrl != null ?
                new ObjectParameter("WebUrl", webUrl) :
                new ObjectParameter("WebUrl", typeof(string));
    
            var logoPathParameter = logoPath != null ?
                new ObjectParameter("LogoPath", logoPath) :
                new ObjectParameter("LogoPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DCISsetSchool", schoolIdParameter, schoolGroupParameter, schoolNameParameter, schoolRankParameter, isActiveParameter, divisionParameter, districtParameter, descriptionParameter, createdByParameter, address1Parameter, address2Parameter, address3Parameter, emailParameter, faxParameter, imagePathParameter, minuteforPeriodParameter, telephoneParameter, schoolCategoryParameter, provinceParameter, webUrlParameter, logoPathParameter);
        }
    
        public virtual int GDdeleteAllApplicationStatus(string isactive, Nullable<long> statusCode, string modyfiedBy)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(long));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDdeleteAllApplicationStatus", isactiveParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDdeleteApplication(Nullable<long> id, string isActive)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDdeleteApplication", idParameter, isActiveParameter);
        }
    
        public virtual int GDdeleteEvaluationType(string isactive, Nullable<long> statusCode, string modyfiedBy)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(long));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDdeleteEvaluationType", isactiveParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDdeleteEventCategory(string isactive, Nullable<long> statusCode, string modyfiedBy)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(long));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDdeleteEventCategory", isactiveParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDdeleteExtraCurricularActivity(string isactive, string statusCode, string modyfiedBy)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(string));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDdeleteExtraCurricularActivity", isactiveParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDdeleteFunction(string isactive, string statusCode, string modyfiedBy)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(string));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDdeleteFunction", isactiveParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDdeleteGradeMaintenance(string isactive, string statusCode, string modyfiedBy)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(string));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDdeleteGradeMaintenance", isactiveParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDdeleteGradeSubject(string academicYear, string gradeId, Nullable<int> subjectId, string isActive, string userId)
        {
            var academicYearParameter = academicYear != null ?
                new ObjectParameter("AcademicYear", academicYear) :
                new ObjectParameter("AcademicYear", typeof(string));
    
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("SubjectId", subjectId) :
                new ObjectParameter("SubjectId", typeof(int));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDdeleteGradeSubject", academicYearParameter, gradeIdParameter, subjectIdParameter, isActiveParameter, userIdParameter);
        }
    
        public virtual int GDDeleteHomeWork(string isactive, Nullable<long> assignmentNo, string modyfiedBy)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            var assignmentNoParameter = assignmentNo.HasValue ?
                new ObjectParameter("AssignmentNo", assignmentNo) :
                new ObjectParameter("AssignmentNo", typeof(long));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDDeleteHomeWork", isactiveParameter, assignmentNoParameter, modyfiedByParameter);
        }
    
        public virtual int GDdeleteMassageType(string isactive, Nullable<long> statusCode, string modyfiedBy)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(long));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDdeleteMassageType", isactiveParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDdeleteParentObservationType(string isactive, Nullable<int> statusCode, string modyfiedBy)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDdeleteParentObservationType", isactiveParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDdeleteQualification(string isactive, Nullable<int> statusCode, string modyfiedBy)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDdeleteQualification", isactiveParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDDeleteSchoolCalenderActivity(Nullable<long> seqNo, string userId, string isActive)
        {
            var seqNoParameter = seqNo.HasValue ?
                new ObjectParameter("SeqNo", seqNo) :
                new ObjectParameter("SeqNo", typeof(long));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDDeleteSchoolCalenderActivity", seqNoParameter, userIdParameter, isActiveParameter);
        }
    
        public virtual int GDdeleteSchoolCategory(string isactive, Nullable<int> statusCode, string modyfiedBy)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDdeleteSchoolCategory", isactiveParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDdeleteSchoolGroup(string isactive, Nullable<long> statusCode, string modyfiedBy)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(long));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDdeleteSchoolGroup", isactiveParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDdeleteSchoolRank(string isactive, Nullable<long> statusCode, string modyfiedBy)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(long));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDdeleteSchoolRank", isactiveParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDdeleteStudentEvaluationType(string isactive, Nullable<long> statusCode, string modyfiedBy)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(long));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDdeleteStudentEvaluationType", isactiveParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDdeleteSubject(string isactive, Nullable<int> statusCode, string modyfiedBy)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDdeleteSubject", isactiveParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDdeleteSubjectCategory(string isactive, Nullable<int> statusCode, string modyfiedBy)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDdeleteSubjectCategory", isactiveParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual ObjectResult<GDgetAllApplicationStatus_Result> GDgetAllApplicationStatus(string isactive, Nullable<long> id)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllApplicationStatus_Result>("GDgetAllApplicationStatus", isactiveParameter, idParameter);
        }
    
        public virtual ObjectResult<GDgetAllClass_Result> GDgetAllClass(string isaActive)
        {
            var isaActiveParameter = isaActive != null ?
                new ObjectParameter("IsaActive", isaActive) :
                new ObjectParameter("IsaActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllClass_Result>("GDgetAllClass", isaActiveParameter);
        }
    
        public virtual ObjectResult<GDgetAllEvaluationType_Result> GDgetAllEvaluationType(string isactive)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllEvaluationType_Result>("GDgetAllEvaluationType", isactiveParameter);
        }
    
        public virtual ObjectResult<GDgetAllEventCategory_Result> GDgetAllEventCategory(string isActive)
        {
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllEventCategory_Result>("GDgetAllEventCategory", isActiveParameter);
        }
    
        public virtual ObjectResult<GDgetAllExtraCurricularActivity_Result> GDgetAllExtraCurricularActivity(string isActive)
        {
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllExtraCurricularActivity_Result>("GDgetAllExtraCurricularActivity", isActiveParameter);
        }
    
        public virtual ObjectResult<GDgetAllFunction_Result> GDgetAllFunction(string isActive)
        {
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllFunction_Result>("GDgetAllFunction", isActiveParameter);
        }
    
        public virtual ObjectResult<GDgetAllGradeMaintenance_Result> GDgetAllGradeMaintenance(string isActive)
        {
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllGradeMaintenance_Result>("GDgetAllGradeMaintenance", isActiveParameter);
        }
    
        public virtual ObjectResult<GDgetAllGradeSubject_Result> GDgetAllGradeSubject(string academicYear, string gradeId, string isActive)
        {
            var academicYearParameter = academicYear != null ?
                new ObjectParameter("AcademicYear", academicYear) :
                new ObjectParameter("AcademicYear", typeof(string));
    
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllGradeSubject_Result>("GDgetAllGradeSubject", academicYearParameter, gradeIdParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<GDgetAllMassageType_Result> GDgetAllMassageType(string isActive)
        {
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllMassageType_Result>("GDgetAllMassageType", isActiveParameter);
        }
    
        public virtual ObjectResult<GDgetAllParentObservationType_Result> GDgetAllParentObservationType(string isActive)
        {
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllParentObservationType_Result>("GDgetAllParentObservationType", isActiveParameter);
        }
    
        public virtual ObjectResult<GDgetAllQualification_Result> GDgetAllQualification(string isActive)
        {
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllQualification_Result>("GDgetAllQualification", isActiveParameter);
        }
    
        public virtual ObjectResult<GDgetAllSchoolCategory_Result> GDgetAllSchoolCategory(string isactive)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllSchoolCategory_Result>("GDgetAllSchoolCategory", isactiveParameter);
        }
    
        public virtual ObjectResult<GDgetAllSchoolClass_Result> GDgetAllSchoolClass(string schoolId, string isActive)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllSchoolClass_Result>("GDgetAllSchoolClass", schoolIdParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<GDgetAllSchoolGroup_Result> GDgetAllSchoolGroup(string isactive)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllSchoolGroup_Result>("GDgetAllSchoolGroup", isactiveParameter);
        }
    
        public virtual ObjectResult<GDgetAllSchoolRank_Result> GDgetAllSchoolRank(string isactive)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllSchoolRank_Result>("GDgetAllSchoolRank", isactiveParameter);
        }
    
        public virtual int GDgetAllStudentEvaluationType(string isactive)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDgetAllStudentEvaluationType", isactiveParameter);
        }
    
        public virtual ObjectResult<GDgetAllStudentInGrade_Result> GDgetAllStudentInGrade(string academicYear, string schoolId, string gradeId, string classId, string isactive)
        {
            var academicYearParameter = academicYear != null ?
                new ObjectParameter("AcademicYear", academicYear) :
                new ObjectParameter("AcademicYear", typeof(string));
    
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("schoolId", schoolId) :
                new ObjectParameter("schoolId", typeof(string));
    
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            var classIdParameter = classId != null ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(string));
    
            var isactiveParameter = isactive != null ?
                new ObjectParameter("isactive", isactive) :
                new ObjectParameter("isactive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllStudentInGrade_Result>("GDgetAllStudentInGrade", academicYearParameter, schoolIdParameter, gradeIdParameter, classIdParameter, isactiveParameter);
        }
    
        public virtual ObjectResult<GDgetAllSubject_Result> GDgetAllSubject(string isactive)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllSubject_Result>("GDgetAllSubject", isactiveParameter);
        }
    
        public virtual ObjectResult<GDgetAllSubjectCategory_Result> GDgetAllSubjectCategory(string isactive)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllSubjectCategory_Result>("GDgetAllSubjectCategory", isactiveParameter);
        }
    
        public virtual ObjectResult<GDgetAllTeacherCategory_Result> GDgetAllTeacherCategory(string isactive)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAllTeacherCategory_Result>("GDgetAllTeacherCategory", isactiveParameter);
        }
    
        public virtual ObjectResult<GDgetApplication_Result> GDgetApplication(Nullable<long> statusCode, string schoolId, string startDate, string endDate, string isActive)
        {
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(long));
    
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetApplication_Result>("GDgetApplication", statusCodeParameter, schoolIdParameter, startDateParameter, endDateParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<GDgetApplicationStatus_Result> GDgetApplicationStatus(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetApplicationStatus_Result>("GDgetApplicationStatus", idParameter);
        }
    
        public virtual ObjectResult<GDgetAttentionRequiredSubjectsGradeWiseSchool_Result> GDgetAttentionRequiredSubjectsGradeWiseSchool(string schoolId, string accemicYear, Nullable<long> evaluationType, string grade)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var accemicYearParameter = accemicYear != null ?
                new ObjectParameter("AccemicYear", accemicYear) :
                new ObjectParameter("AccemicYear", typeof(string));
    
            var evaluationTypeParameter = evaluationType.HasValue ?
                new ObjectParameter("EvaluationType", evaluationType) :
                new ObjectParameter("EvaluationType", typeof(long));
    
            var gradeParameter = grade != null ?
                new ObjectParameter("Grade", grade) :
                new ObjectParameter("Grade", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAttentionRequiredSubjectsGradeWiseSchool_Result>("GDgetAttentionRequiredSubjectsGradeWiseSchool", schoolIdParameter, accemicYearParameter, evaluationTypeParameter, gradeParameter);
        }
    
        public virtual ObjectResult<GDgetAttentionRequiredSubjectsSchool_Result> GDgetAttentionRequiredSubjectsSchool(string schoolId, string accemicYear, Nullable<long> evaluationType, string grade)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var accemicYearParameter = accemicYear != null ?
                new ObjectParameter("AccemicYear", accemicYear) :
                new ObjectParameter("AccemicYear", typeof(string));
    
            var evaluationTypeParameter = evaluationType.HasValue ?
                new ObjectParameter("EvaluationType", evaluationType) :
                new ObjectParameter("EvaluationType", typeof(long));
    
            var gradeParameter = grade != null ?
                new ObjectParameter("Grade", grade) :
                new ObjectParameter("Grade", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetAttentionRequiredSubjectsSchool_Result>("GDgetAttentionRequiredSubjectsSchool", schoolIdParameter, accemicYearParameter, evaluationTypeParameter, gradeParameter);
        }
    
        public virtual ObjectResult<GDgetClassAttentionRequiredSubjects_Result> GDgetClassAttentionRequiredSubjects(string accYear, string gradeId, string classId, Nullable<long> evaluationType)
        {
            var accYearParameter = accYear != null ?
                new ObjectParameter("AccYear", accYear) :
                new ObjectParameter("AccYear", typeof(string));
    
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            var classIdParameter = classId != null ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(string));
    
            var evaluationTypeParameter = evaluationType.HasValue ?
                new ObjectParameter("EvaluationType", evaluationType) :
                new ObjectParameter("EvaluationType", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetClassAttentionRequiredSubjects_Result>("GDgetClassAttentionRequiredSubjects", accYearParameter, gradeIdParameter, classIdParameter, evaluationTypeParameter);
        }
    
        public virtual ObjectResult<GDgetGradeActiveClass_Result> GDgetGradeActiveClass(string gradeId, string schoolId, string isActive)
        {
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetGradeActiveClass_Result>("GDgetGradeActiveClass", gradeIdParameter, schoolIdParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<GDgetGradeActiveSubject_Result> GDgetGradeActiveSubject(string gradeId, string isActive)
        {
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetGradeActiveSubject_Result>("GDgetGradeActiveSubject", gradeIdParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<GDgetHomeWork_Result> GDgetHomeWork(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetHomeWork_Result>("GDgetHomeWork", idParameter);
        }
    
        public virtual ObjectResult<GDgetHomeWorkAdd_Result> GDgetHomeWorkAdd(string schoolId, Nullable<long> teacherId, string isActive, string fromdate, string todate)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("TeacherId", teacherId) :
                new ObjectParameter("TeacherId", typeof(long));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetHomeWorkAdd_Result>("GDgetHomeWorkAdd", schoolIdParameter, teacherIdParameter, isActiveParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<GDgetParentApplicationStatus_Result> GDgetParentApplicationStatus(string refNo)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetParentApplicationStatus_Result>("GDgetParentApplicationStatus", refNoParameter);
        }
    
        public virtual ObjectResult<GDgetParentAttentionRequiredSubject_Result> GDgetParentAttentionRequiredSubject(string accYear, Nullable<long> eveluationType, string userName)
        {
            var accYearParameter = accYear != null ?
                new ObjectParameter("AccYear", accYear) :
                new ObjectParameter("AccYear", typeof(string));
    
            var eveluationTypeParameter = eveluationType.HasValue ?
                new ObjectParameter("EveluationType", eveluationType) :
                new ObjectParameter("EveluationType", typeof(long));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetParentAttentionRequiredSubject_Result>("GDgetParentAttentionRequiredSubject", accYearParameter, eveluationTypeParameter, userNameParameter);
        }
    
        public virtual ObjectResult<GDgetParentHomeWork_Result> GDgetParentHomeWork(string schoolId, string fromdate, string todate, string userId, string isActive)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetParentHomeWork_Result>("GDgetParentHomeWork", schoolIdParameter, fromdateParameter, todateParameter, userIdParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<GDgetSchoolCalenderEvent_Result> GDgetSchoolCalenderEvent(string schoolId, string year, string isActive)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GDgetSchoolCalenderEvent_Result>("GDgetSchoolCalenderEvent", schoolIdParameter, yearParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<GdgetStudentAttentionRequiredSubjects_Result> GdgetStudentAttentionRequiredSubjects(string accYear, string studentId, Nullable<long> evaluationType)
        {
            var accYearParameter = accYear != null ?
                new ObjectParameter("AccYear", accYear) :
                new ObjectParameter("AccYear", typeof(string));
    
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var evaluationTypeParameter = evaluationType.HasValue ?
                new ObjectParameter("EvaluationType", evaluationType) :
                new ObjectParameter("EvaluationType", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GdgetStudentAttentionRequiredSubjects_Result>("GdgetStudentAttentionRequiredSubjects", accYearParameter, studentIdParameter, evaluationTypeParameter);
        }
    
        public virtual int GDModifyAllApplicationStatus(string description, Nullable<long> statusCode, string modyfiedBy)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(long));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifyAllApplicationStatus", descriptionParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDModifyApplicationStatus(Nullable<long> id, string remark, Nullable<long> statusCode, string refNo, string userId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("remark", remark) :
                new ObjectParameter("remark", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(long));
    
            var refNoParameter = refNo != null ?
                new ObjectParameter("refNo", refNo) :
                new ObjectParameter("refNo", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifyApplicationStatus", idParameter, remarkParameter, statusCodeParameter, refNoParameter, userIdParameter);
        }
    
        public virtual int GDModifyEvaluationTypee(string description, Nullable<long> statusCode, string modyfiedBy)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(long));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifyEvaluationTypee", descriptionParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDModifyEventCategory(string description, Nullable<long> statusCode, string modyfiedBy, string broadcast, string parentApproval)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(long));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            var broadcastParameter = broadcast != null ?
                new ObjectParameter("Broadcast", broadcast) :
                new ObjectParameter("Broadcast", typeof(string));
    
            var parentApprovalParameter = parentApproval != null ?
                new ObjectParameter("ParentApproval", parentApproval) :
                new ObjectParameter("ParentApproval", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifyEventCategory", descriptionParameter, statusCodeParameter, modyfiedByParameter, broadcastParameter, parentApprovalParameter);
        }
    
        public virtual int GDModifyExtraCurricularActivit(string description, string statusCode, string modyfiedBy)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(string));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifyExtraCurricularActivit", descriptionParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDModifyFunction(string description, string statusCode, string modyfiedBy)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(string));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifyFunction", descriptionParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDModifyGrade(string description, string statusCode, string modyfiedBy)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(string));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifyGrade", descriptionParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDModifyGradeSubject(string academicYear, string gradeId, Nullable<int> subjectId, Nullable<int> subjectCatId, string option, string userId)
        {
            var academicYearParameter = academicYear != null ?
                new ObjectParameter("AcademicYear", academicYear) :
                new ObjectParameter("AcademicYear", typeof(string));
    
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("SubjectId", subjectId) :
                new ObjectParameter("SubjectId", typeof(int));
    
            var subjectCatIdParameter = subjectCatId.HasValue ?
                new ObjectParameter("SubjectCatId", subjectCatId) :
                new ObjectParameter("SubjectCatId", typeof(int));
    
            var optionParameter = option != null ?
                new ObjectParameter("option", option) :
                new ObjectParameter("option", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifyGradeSubject", academicYearParameter, gradeIdParameter, subjectIdParameter, subjectCatIdParameter, optionParameter, userIdParameter);
        }
    
        public virtual int GDModifyHomeWork(string assignmentDescription, string schoolId, string gradeId, string classId, string filePath, string batchNo, string batchDescription, Nullable<int> subjectId, Nullable<long> assignmentNo, Nullable<System.DateTime> dueDate, Nullable<long> dueId, string modyfiedBy)
        {
            var assignmentDescriptionParameter = assignmentDescription != null ?
                new ObjectParameter("AssignmentDescription", assignmentDescription) :
                new ObjectParameter("AssignmentDescription", typeof(string));
    
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            var classIdParameter = classId != null ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(string));
    
            var filePathParameter = filePath != null ?
                new ObjectParameter("FilePath", filePath) :
                new ObjectParameter("FilePath", typeof(string));
    
            var batchNoParameter = batchNo != null ?
                new ObjectParameter("BatchNo", batchNo) :
                new ObjectParameter("BatchNo", typeof(string));
    
            var batchDescriptionParameter = batchDescription != null ?
                new ObjectParameter("BatchDescription", batchDescription) :
                new ObjectParameter("BatchDescription", typeof(string));
    
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("SubjectId", subjectId) :
                new ObjectParameter("SubjectId", typeof(int));
    
            var assignmentNoParameter = assignmentNo.HasValue ?
                new ObjectParameter("AssignmentNo", assignmentNo) :
                new ObjectParameter("AssignmentNo", typeof(long));
    
            var dueDateParameter = dueDate.HasValue ?
                new ObjectParameter("DueDate", dueDate) :
                new ObjectParameter("DueDate", typeof(System.DateTime));
    
            var dueIdParameter = dueId.HasValue ?
                new ObjectParameter("DueId", dueId) :
                new ObjectParameter("DueId", typeof(long));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifyHomeWork", assignmentDescriptionParameter, schoolIdParameter, gradeIdParameter, classIdParameter, filePathParameter, batchNoParameter, batchDescriptionParameter, subjectIdParameter, assignmentNoParameter, dueDateParameter, dueIdParameter, modyfiedByParameter);
        }
    
        public virtual int GDModifyMassageType(string description, Nullable<long> statusCode, string modyfiedBy)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(long));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifyMassageType", descriptionParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDModifyParentObservationType(string description, Nullable<int> statusCode, string modyfiedBy)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifyParentObservationType", descriptionParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDModifyQualification(string description, Nullable<int> statusCode, string modyfiedBy)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifyQualification", descriptionParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDModifySchoolCalenderActivity(Nullable<long> seqNo, Nullable<System.DateTime> todate, Nullable<System.DateTime> fromDate, string comment, string dateComment, string isholiday, string userId)
        {
            var seqNoParameter = seqNo.HasValue ?
                new ObjectParameter("SeqNo", seqNo) :
                new ObjectParameter("SeqNo", typeof(long));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var dateCommentParameter = dateComment != null ?
                new ObjectParameter("DateComment", dateComment) :
                new ObjectParameter("DateComment", typeof(string));
    
            var isholidayParameter = isholiday != null ?
                new ObjectParameter("Isholiday", isholiday) :
                new ObjectParameter("Isholiday", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifySchoolCalenderActivity", seqNoParameter, todateParameter, fromDateParameter, commentParameter, dateCommentParameter, isholidayParameter, userIdParameter);
        }
    
        public virtual int GDModifySchoolCategory(string description, Nullable<int> statusCode, string modyfiedBy)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifySchoolCategory", descriptionParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDModifySchoolGroup(string description, Nullable<long> statusCode, string modyfiedBy)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(long));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifySchoolGroup", descriptionParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDModifySchoolRank(string description, Nullable<long> statusCode, string modyfiedBy)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(long));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifySchoolRank", descriptionParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDModifyStudentEvaluationType(string description, Nullable<long> statusCode, string modyfiedBy)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(long));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifyStudentEvaluationType", descriptionParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDModifyStudentGradeAdvance(string schoolId, string studentId, string gradeId, string classId, string userId)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("schoolId", schoolId) :
                new ObjectParameter("schoolId", typeof(string));
    
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("gradeId", gradeId) :
                new ObjectParameter("gradeId", typeof(string));
    
            var classIdParameter = classId != null ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifyStudentGradeAdvance", schoolIdParameter, studentIdParameter, gradeIdParameter, classIdParameter, userIdParameter);
        }
    
        public virtual int GDModifyStudentLeaver(string schoolId, string studentId, string userId, string isActive)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("schoolId", schoolId) :
                new ObjectParameter("schoolId", typeof(string));
    
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifyStudentLeaver", schoolIdParameter, studentIdParameter, userIdParameter, isActiveParameter);
        }
    
        public virtual int GDModifySubject(string shortName, string subjectName, Nullable<int> statusCode, string modyfiedBy)
        {
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var subjectNameParameter = subjectName != null ?
                new ObjectParameter("SubjectName", subjectName) :
                new ObjectParameter("SubjectName", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifySubject", shortNameParameter, subjectNameParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDModifySubjectCategory(string subjectName, Nullable<int> statusCode, string modyfiedBy)
        {
            var subjectNameParameter = subjectName != null ?
                new ObjectParameter("SubjectName", subjectName) :
                new ObjectParameter("SubjectName", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDModifySubjectCategory", subjectNameParameter, statusCodeParameter, modyfiedByParameter);
        }
    
        public virtual int GDsetApplicationStatus(string description, string createdBy, string isActive)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetApplicationStatus", descriptionParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int GDsetEvaluationType(string description, string createdBy, string isActive)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetEvaluationType", descriptionParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int GDsetEventCategory(string description, string broadcast, string approval, string createdBy, string isActive)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var broadcastParameter = broadcast != null ?
                new ObjectParameter("Broadcast", broadcast) :
                new ObjectParameter("Broadcast", typeof(string));
    
            var approvalParameter = approval != null ?
                new ObjectParameter("Approval", approval) :
                new ObjectParameter("Approval", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetEventCategory", descriptionParameter, broadcastParameter, approvalParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int GDsetExtraCurricularActivity(string code, string description, string createdBy, string isActive)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetExtraCurricularActivity", codeParameter, descriptionParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int GDsetFunction(string id, string description, string createdBy, string isActive)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetFunction", idParameter, descriptionParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int GDsetGrade(string id, string description, string createdBy, string isActive)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetGrade", idParameter, descriptionParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int GDsetGradeSubject(string academicYear, string gradeId, Nullable<int> subjectId, Nullable<int> subjectCategoryId, string optional, string createdBy, string isActive)
        {
            var academicYearParameter = academicYear != null ?
                new ObjectParameter("AcademicYear", academicYear) :
                new ObjectParameter("AcademicYear", typeof(string));
    
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("SubjectId", subjectId) :
                new ObjectParameter("SubjectId", typeof(int));
    
            var subjectCategoryIdParameter = subjectCategoryId.HasValue ?
                new ObjectParameter("SubjectCategoryId", subjectCategoryId) :
                new ObjectParameter("SubjectCategoryId", typeof(int));
    
            var optionalParameter = optional != null ?
                new ObjectParameter("Optional", optional) :
                new ObjectParameter("Optional", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetGradeSubject", academicYearParameter, gradeIdParameter, subjectIdParameter, subjectCategoryIdParameter, optionalParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int GDsetHomeWork(string assignmentDescription, string schoolId, string gradeId, string classId, string filePath, Nullable<long> teacherId, string batchNo, string batchDescription, Nullable<int> subjectId, Nullable<long> assignmentNo, Nullable<System.DateTime> dueDate, Nullable<long> dueId, string user, string isActive)
        {
            var assignmentDescriptionParameter = assignmentDescription != null ?
                new ObjectParameter("AssignmentDescription", assignmentDescription) :
                new ObjectParameter("AssignmentDescription", typeof(string));
    
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            var classIdParameter = classId != null ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(string));
    
            var filePathParameter = filePath != null ?
                new ObjectParameter("FilePath", filePath) :
                new ObjectParameter("FilePath", typeof(string));
    
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("TeacherId", teacherId) :
                new ObjectParameter("TeacherId", typeof(long));
    
            var batchNoParameter = batchNo != null ?
                new ObjectParameter("BatchNo", batchNo) :
                new ObjectParameter("BatchNo", typeof(string));
    
            var batchDescriptionParameter = batchDescription != null ?
                new ObjectParameter("BatchDescription", batchDescription) :
                new ObjectParameter("BatchDescription", typeof(string));
    
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("SubjectId", subjectId) :
                new ObjectParameter("SubjectId", typeof(int));
    
            var assignmentNoParameter = assignmentNo.HasValue ?
                new ObjectParameter("AssignmentNo", assignmentNo) :
                new ObjectParameter("AssignmentNo", typeof(long));
    
            var dueDateParameter = dueDate.HasValue ?
                new ObjectParameter("DueDate", dueDate) :
                new ObjectParameter("DueDate", typeof(System.DateTime));
    
            var dueIdParameter = dueId.HasValue ?
                new ObjectParameter("DueId", dueId) :
                new ObjectParameter("DueId", typeof(long));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetHomeWork", assignmentDescriptionParameter, schoolIdParameter, gradeIdParameter, classIdParameter, filePathParameter, teacherIdParameter, batchNoParameter, batchDescriptionParameter, subjectIdParameter, assignmentNoParameter, dueDateParameter, dueIdParameter, userParameter, isActiveParameter);
        }
    
        public virtual int GDsetMassageType(string description, string createdBy, string isActive)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetMassageType", descriptionParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int GDsetParentObservationType(string description, string createdBy, string isActive)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetParentObservationType", descriptionParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int GDsetQualification(string description, string createdBy, string isActive)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetQualification", descriptionParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int GDsetSchoolCalenderActivity(string schoolId, string acadamicYear, string dateComment, string isHoliday, string specialComment, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string user, string isActive)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var acadamicYearParameter = acadamicYear != null ?
                new ObjectParameter("AcadamicYear", acadamicYear) :
                new ObjectParameter("AcadamicYear", typeof(string));
    
            var dateCommentParameter = dateComment != null ?
                new ObjectParameter("DateComment", dateComment) :
                new ObjectParameter("DateComment", typeof(string));
    
            var isHolidayParameter = isHoliday != null ?
                new ObjectParameter("IsHoliday", isHoliday) :
                new ObjectParameter("IsHoliday", typeof(string));
    
            var specialCommentParameter = specialComment != null ?
                new ObjectParameter("SpecialComment", specialComment) :
                new ObjectParameter("SpecialComment", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetSchoolCalenderActivity", schoolIdParameter, acadamicYearParameter, dateCommentParameter, isHolidayParameter, specialCommentParameter, fromDateParameter, toDateParameter, userParameter, isActiveParameter);
        }
    
        public virtual int GDsetSchoolCategory(string description, string createdBy, string isActive)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetSchoolCategory", descriptionParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int GDsetSchoolGroup(string description, string createdBy, string isActive)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetSchoolGroup", descriptionParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int GDsetSchoolRank(string description, string createdBy, string isActive)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetSchoolRank", descriptionParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int GDsetStudentEvaluationType(string description, string createdBy, string isActive)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetStudentEvaluationType", descriptionParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int GDsetStudentHistory(string studentId)
        {
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetStudentHistory", studentIdParameter);
        }
    
        public virtual int GDsetSubject(string shortName, string subjectName, string createdBy, string isActive)
        {
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var subjectNameParameter = subjectName != null ?
                new ObjectParameter("SubjectName", subjectName) :
                new ObjectParameter("SubjectName", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetSubject", shortNameParameter, subjectNameParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int GDsetSubjectCategory(string description, string createdBy, string isActive)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GDsetSubjectCategory", descriptionParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<getAllEvaluationType_Result> getAllEvaluationType(string isactive)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAllEvaluationType_Result>("getAllEvaluationType", isactiveParameter);
        }
    
        public virtual ObjectResult<SMGT_getSchoolExactivity_Result> SMGT_getSchoolExactivity(string schoolId)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGT_getSchoolExactivity_Result>("SMGT_getSchoolExactivity", schoolIdParameter);
        }
    
        public virtual ObjectResult<SMGT_getSchoolExactivityParent_Result> SMGT_getSchoolExactivityParent(string schoolId, string activityCode)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var activityCodeParameter = activityCode != null ?
                new ObjectParameter("ActivityCode", activityCode) :
                new ObjectParameter("ActivityCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGT_getSchoolExactivityParent_Result>("SMGT_getSchoolExactivityParent", schoolIdParameter, activityCodeParameter);
        }
    
        public virtual ObjectResult<SMGT_getSchoolGreadClassParent_Result> SMGT_getSchoolGreadClassParent(string schoolId, string greadId, string classId)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var greadIdParameter = greadId != null ?
                new ObjectParameter("GreadId", greadId) :
                new ObjectParameter("GreadId", typeof(string));
    
            var classIdParameter = classId != null ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGT_getSchoolGreadClassParent_Result>("SMGT_getSchoolGreadClassParent", schoolIdParameter, greadIdParameter, classIdParameter);
        }
    
        public virtual int SMGTDeleteSchool(string isactive, string schoolId, string modyfiedBy)
        {
            var isactiveParameter = isactive != null ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(string));
    
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var modyfiedByParameter = modyfiedBy != null ?
                new ObjectParameter("ModyfiedBy", modyfiedBy) :
                new ObjectParameter("ModyfiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SMGTDeleteSchool", isactiveParameter, schoolIdParameter, modyfiedByParameter);
        }
    
        public virtual int SMGTDeleteTeacherExtraCurricularActivity(Nullable<long> teacherid, string schoolid, string activityCode)
        {
            var teacheridParameter = teacherid.HasValue ?
                new ObjectParameter("Teacherid", teacherid) :
                new ObjectParameter("Teacherid", typeof(long));
    
            var schoolidParameter = schoolid != null ?
                new ObjectParameter("Schoolid", schoolid) :
                new ObjectParameter("Schoolid", typeof(string));
    
            var activityCodeParameter = activityCode != null ?
                new ObjectParameter("ActivityCode", activityCode) :
                new ObjectParameter("ActivityCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SMGTDeleteTeacherExtraCurricularActivity", teacheridParameter, schoolidParameter, activityCodeParameter);
        }
    
        public virtual ObjectResult<SMGTgetAllSchoolExtraCurricularActivity_Result> SMGTgetAllSchoolExtraCurricularActivity(string isActive)
        {
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetAllSchoolExtraCurricularActivity_Result>("SMGTgetAllSchoolExtraCurricularActivity", isActiveParameter);
        }
    
        public virtual ObjectResult<SMGTgetAllSchoolGrades_Result> SMGTgetAllSchoolGrades(string isActive)
        {
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetAllSchoolGrades_Result>("SMGTgetAllSchoolGrades", isActiveParameter);
        }
    
        public virtual ObjectResult<SMGTgetAllSchoolSubjects_Result> SMGTgetAllSchoolSubjects(string isActive)
        {
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetAllSchoolSubjects_Result>("SMGTgetAllSchoolSubjects", isActiveParameter);
        }
    
        public virtual ObjectResult<SMGTgetAllTeachers_Result> SMGTgetAllTeachers(string schoolid, string userId, string isActive)
        {
            var schoolidParameter = schoolid != null ?
                new ObjectParameter("Schoolid", schoolid) :
                new ObjectParameter("Schoolid", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetAllTeachers_Result>("SMGTgetAllTeachers", schoolidParameter, userIdParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<SMGTgetclassadd_Result> SMGTgetclassadd(string schoolId, string gradeId)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetclassadd_Result>("SMGTgetclassadd", schoolIdParameter, gradeIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetDayTimeTabel_Result> SMGTgetDayTimeTabel(string classId, string greadId, string schoolId, string day)
        {
            var classIdParameter = classId != null ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(string));
    
            var greadIdParameter = greadId != null ?
                new ObjectParameter("GreadId", greadId) :
                new ObjectParameter("GreadId", typeof(string));
    
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var dayParameter = day != null ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetDayTimeTabel_Result>("SMGTgetDayTimeTabel", classIdParameter, greadIdParameter, schoolIdParameter, dayParameter);
        }
    
        public virtual ObjectResult<SMGTgetGradeSubjects_Result> SMGTgetGradeSubjects(string gradeId)
        {
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetGradeSubjects_Result>("SMGTgetGradeSubjects", gradeIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetOptionalSubjectadd_Result> SMGTgetOptionalSubjectadd(string schoolId, string gradeId, string academicYear)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            var academicYearParameter = academicYear != null ?
                new ObjectParameter("AcademicYear", academicYear) :
                new ObjectParameter("AcademicYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetOptionalSubjectadd_Result>("SMGTgetOptionalSubjectadd", schoolIdParameter, gradeIdParameter, academicYearParameter);
        }
    
        public virtual ObjectResult<SMGTGetParent_Result> SMGTGetParent(string studentID, string schoolId)
        {
            var studentIDParameter = studentID != null ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(string));
    
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTGetParent_Result>("SMGTGetParent", studentIDParameter, schoolIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetParentStudentadd_Result> SMGTgetParentStudentadd(string parentId)
        {
            var parentIdParameter = parentId != null ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetParentStudentadd_Result>("SMGTgetParentStudentadd", parentIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetParentToSchoolSentMail_Result> SMGTgetParentToSchoolSentMail(Nullable<long> parentId)
        {
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetParentToSchoolSentMail_Result>("SMGTgetParentToSchoolSentMail", parentIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetPtoSMessageView_Result> SMGTgetPtoSMessageView(Nullable<long> messageId)
        {
            var messageIdParameter = messageId.HasValue ?
                new ObjectParameter("MessageId", messageId) :
                new ObjectParameter("MessageId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetPtoSMessageView_Result>("SMGTgetPtoSMessageView", messageIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetSchoolClasses_Result> SMGTgetSchoolClasses(string schoolId, string gradeId)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetSchoolClasses_Result>("SMGTgetSchoolClasses", schoolIdParameter, gradeIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetSchoolExtraCadd_Result> SMGTgetSchoolExtraCadd(string schoolId)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetSchoolExtraCadd_Result>("SMGTgetSchoolExtraCadd", schoolIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetSchoolGrade_Result> SMGTgetSchoolGrade(string schoolId)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetSchoolGrade_Result>("SMGTgetSchoolGrade", schoolIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetSchoolGradeadd_Result> SMGTgetSchoolGradeadd(string schoolId)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetSchoolGradeadd_Result>("SMGTgetSchoolGradeadd", schoolIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetSchoolHouseadd_Result> SMGTgetSchoolHouseadd(string schoolId)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetSchoolHouseadd_Result>("SMGTgetSchoolHouseadd", schoolIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetSchoolSubadd_Result> SMGTgetSchoolSubadd(string schoolId, string academicyear)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var academicyearParameter = academicyear != null ?
                new ObjectParameter("academicyear", academicyear) :
                new ObjectParameter("academicyear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetSchoolSubadd_Result>("SMGTgetSchoolSubadd", schoolIdParameter, academicyearParameter);
        }
    
        public virtual ObjectResult<SMGTgetSchoolTeacher_Result> SMGTgetSchoolTeacher(string schoolId)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetSchoolTeacher_Result>("SMGTgetSchoolTeacher", schoolIdParameter);
        }
    
        public virtual ObjectResult<SMGTGetStudent_Result> SMGTGetStudent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTGetStudent_Result>("SMGTGetStudent");
        }
    
        public virtual ObjectResult<SMGTgetStudentExtraCadd_Result> SMGTgetStudentExtraCadd(string schoolId, string studentId)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetStudentExtraCadd_Result>("SMGTgetStudentExtraCadd", schoolIdParameter, studentIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetStudentforoptionalSubject_Result> SMGTgetStudentforoptionalSubject(string schoolId, string gradeId, string academicYear, string classId)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            var academicYearParameter = academicYear != null ?
                new ObjectParameter("AcademicYear", academicYear) :
                new ObjectParameter("AcademicYear", typeof(string));
    
            var classIdParameter = classId != null ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetStudentforoptionalSubject_Result>("SMGTgetStudentforoptionalSubject", schoolIdParameter, gradeIdParameter, academicYearParameter, classIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetStudentOptionalSubjects_Result> SMGTgetStudentOptionalSubjects(string schoolId, string studentId)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetStudentOptionalSubjects_Result>("SMGTgetStudentOptionalSubjects", schoolIdParameter, studentIdParameter);
        }
    
        public virtual ObjectResult<SMGTGetStudentsAllSubjectMarks_Result> SMGTGetStudentsAllSubjectMarks(string schoolId, string studentId, string gradeID, string academicYear, string evaluationType)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var gradeIDParameter = gradeID != null ?
                new ObjectParameter("GradeID", gradeID) :
                new ObjectParameter("GradeID", typeof(string));
    
            var academicYearParameter = academicYear != null ?
                new ObjectParameter("AcademicYear", academicYear) :
                new ObjectParameter("AcademicYear", typeof(string));
    
            var evaluationTypeParameter = evaluationType != null ?
                new ObjectParameter("EvaluationType", evaluationType) :
                new ObjectParameter("EvaluationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTGetStudentsAllSubjectMarks_Result>("SMGTGetStudentsAllSubjectMarks", schoolIdParameter, studentIdParameter, gradeIDParameter, academicYearParameter, evaluationTypeParameter);
        }
    
        public virtual ObjectResult<SMGTgetTeacher_Result> SMGTgetTeacher(Nullable<long> teacherID)
        {
            var teacherIDParameter = teacherID.HasValue ?
                new ObjectParameter("TeacherID", teacherID) :
                new ObjectParameter("TeacherID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetTeacher_Result>("SMGTgetTeacher", teacherIDParameter);
        }
    
        public virtual ObjectResult<SMGTgetTeacherExActivity_Result> SMGTgetTeacherExActivity(Nullable<long> teacherID)
        {
            var teacherIDParameter = teacherID.HasValue ?
                new ObjectParameter("TeacherID", teacherID) :
                new ObjectParameter("TeacherID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetTeacherExActivity_Result>("SMGTgetTeacherExActivity", teacherIDParameter);
        }
    
        public virtual ObjectResult<SMGTgetTeacherfromSchool_Result> SMGTgetTeacherfromSchool(string schoolId)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetTeacherfromSchool_Result>("SMGTgetTeacherfromSchool", schoolIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetTeacherQualification_Result> SMGTgetTeacherQualification(Nullable<long> teacherId)
        {
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("TeacherId", teacherId) :
                new ObjectParameter("TeacherId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetTeacherQualification_Result>("SMGTgetTeacherQualification", teacherIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetTeachers_Result> SMGTgetTeachers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetTeachers_Result>("SMGTgetTeachers");
        }
    
        public virtual ObjectResult<SMGTgetTeacherSubjects_Result> SMGTgetTeacherSubjects(Nullable<long> teacherId)
        {
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("TeacherId", teacherId) :
                new ObjectParameter("TeacherId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetTeacherSubjects_Result>("SMGTgetTeacherSubjects", teacherIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetUserCategoryFunction_Result> SMGTgetUserCategoryFunction(string userCategoryId)
        {
            var userCategoryIdParameter = userCategoryId != null ?
                new ObjectParameter("UserCategoryId", userCategoryId) :
                new ObjectParameter("UserCategoryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetUserCategoryFunction_Result>("SMGTgetUserCategoryFunction", userCategoryIdParameter);
        }
    
        public virtual ObjectResult<SMGTloadScholExtraCadd_Result> SMGTloadScholExtraCadd(string schoolId, string studentId)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTloadScholExtraCadd_Result>("SMGTloadScholExtraCadd", schoolIdParameter, studentIdParameter);
        }
    
        public virtual int SMGTModifyStudent(string schoolId, string studentId, string studentName, Nullable<System.DateTime> dateofBirth, string gradeId, string classId, string gender, string userId, string houseId, string imgUrl, string modifiedBy, string isActive)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var studentNameParameter = studentName != null ?
                new ObjectParameter("studentName", studentName) :
                new ObjectParameter("studentName", typeof(string));
    
            var dateofBirthParameter = dateofBirth.HasValue ?
                new ObjectParameter("DateofBirth", dateofBirth) :
                new ObjectParameter("DateofBirth", typeof(System.DateTime));
    
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            var classIdParameter = classId != null ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var houseIdParameter = houseId != null ?
                new ObjectParameter("HouseId", houseId) :
                new ObjectParameter("HouseId", typeof(string));
    
            var imgUrlParameter = imgUrl != null ?
                new ObjectParameter("ImgUrl", imgUrl) :
                new ObjectParameter("ImgUrl", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SMGTModifyStudent", schoolIdParameter, studentIdParameter, studentNameParameter, dateofBirthParameter, gradeIdParameter, classIdParameter, genderParameter, userIdParameter, houseIdParameter, imgUrlParameter, modifiedByParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SMGTSchoolCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SMGTSchoolCount");
        }
    
        public virtual int SMGTsetParent(string parentName, Nullable<int> relationshipId, string address1, string address2, string address3, string homeTelephone, string personalEmail, string personalMobile, string occupation, string officeAddress1, string officeAddress2, string officeAddress3, string officePhone, string officeEmail, string nIC, string userId, string imgUrl, Nullable<System.DateTime> dateofBirth, string createdBy, string isActive)
        {
            var parentNameParameter = parentName != null ?
                new ObjectParameter("ParentName", parentName) :
                new ObjectParameter("ParentName", typeof(string));
    
            var relationshipIdParameter = relationshipId.HasValue ?
                new ObjectParameter("RelationshipId", relationshipId) :
                new ObjectParameter("RelationshipId", typeof(int));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("Address3", address3) :
                new ObjectParameter("Address3", typeof(string));
    
            var homeTelephoneParameter = homeTelephone != null ?
                new ObjectParameter("HomeTelephone", homeTelephone) :
                new ObjectParameter("HomeTelephone", typeof(string));
    
            var personalEmailParameter = personalEmail != null ?
                new ObjectParameter("PersonalEmail", personalEmail) :
                new ObjectParameter("PersonalEmail", typeof(string));
    
            var personalMobileParameter = personalMobile != null ?
                new ObjectParameter("PersonalMobile", personalMobile) :
                new ObjectParameter("PersonalMobile", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var officeAddress1Parameter = officeAddress1 != null ?
                new ObjectParameter("OfficeAddress1", officeAddress1) :
                new ObjectParameter("OfficeAddress1", typeof(string));
    
            var officeAddress2Parameter = officeAddress2 != null ?
                new ObjectParameter("OfficeAddress2", officeAddress2) :
                new ObjectParameter("OfficeAddress2", typeof(string));
    
            var officeAddress3Parameter = officeAddress3 != null ?
                new ObjectParameter("OfficeAddress3", officeAddress3) :
                new ObjectParameter("OfficeAddress3", typeof(string));
    
            var officePhoneParameter = officePhone != null ?
                new ObjectParameter("OfficePhone", officePhone) :
                new ObjectParameter("OfficePhone", typeof(string));
    
            var officeEmailParameter = officeEmail != null ?
                new ObjectParameter("officeEmail", officeEmail) :
                new ObjectParameter("officeEmail", typeof(string));
    
            var nICParameter = nIC != null ?
                new ObjectParameter("NIC", nIC) :
                new ObjectParameter("NIC", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var imgUrlParameter = imgUrl != null ?
                new ObjectParameter("ImgUrl", imgUrl) :
                new ObjectParameter("ImgUrl", typeof(string));
    
            var dateofBirthParameter = dateofBirth.HasValue ?
                new ObjectParameter("DateofBirth", dateofBirth) :
                new ObjectParameter("DateofBirth", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SMGTsetParent", parentNameParameter, relationshipIdParameter, address1Parameter, address2Parameter, address3Parameter, homeTelephoneParameter, personalEmailParameter, personalMobileParameter, occupationParameter, officeAddress1Parameter, officeAddress2Parameter, officeAddress3Parameter, officePhoneParameter, officeEmailParameter, nICParameter, userIdParameter, imgUrlParameter, dateofBirthParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int SMGTsetSchoolGrade(string schoolId, string gradeId, string createdBy, string isActive)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SMGTsetSchoolGrade", schoolIdParameter, gradeIdParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int SMGTsetStudent(string schoolId, string studentId, string studentName, Nullable<System.DateTime> dateofBirth, string gradeId, string classId, string gender, string userId, string houseId, string imgUrl, string createdBy, string isActive)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var studentNameParameter = studentName != null ?
                new ObjectParameter("studentName", studentName) :
                new ObjectParameter("studentName", typeof(string));
    
            var dateofBirthParameter = dateofBirth.HasValue ?
                new ObjectParameter("DateofBirth", dateofBirth) :
                new ObjectParameter("DateofBirth", typeof(System.DateTime));
    
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            var classIdParameter = classId != null ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var houseIdParameter = houseId != null ?
                new ObjectParameter("HouseId", houseId) :
                new ObjectParameter("HouseId", typeof(string));
    
            var imgUrlParameter = imgUrl != null ?
                new ObjectParameter("ImgUrl", imgUrl) :
                new ObjectParameter("ImgUrl", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SMGTsetStudent", schoolIdParameter, studentIdParameter, studentNameParameter, dateofBirthParameter, gradeIdParameter, classIdParameter, genderParameter, userIdParameter, houseIdParameter, imgUrlParameter, createdByParameter, isActiveParameter);
        }
    
        public virtual int SMGTsetStudentOptionalSubject(string schoolId, string gradeId, string createdBy, string isActive, string academicYear, string studentId, string classId, string subjectId)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            var academicYearParameter = academicYear != null ?
                new ObjectParameter("AcademicYear", academicYear) :
                new ObjectParameter("AcademicYear", typeof(string));
    
            var studentIdParameter = studentId != null ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(string));
    
            var classIdParameter = classId != null ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(string));
    
            var subjectIdParameter = subjectId != null ?
                new ObjectParameter("SubjectId", subjectId) :
                new ObjectParameter("SubjectId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SMGTsetStudentOptionalSubject", schoolIdParameter, gradeIdParameter, createdByParameter, isActiveParameter, academicYearParameter, studentIdParameter, classIdParameter, subjectIdParameter);
        }
    }
}
