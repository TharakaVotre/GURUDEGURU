//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GDWEBSolution.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SchoolMGTEntitiesConnectionString : DbContext
    {
        public SchoolMGTEntitiesConnectionString()
            : base("name=SchoolMGTEntitiesConnectionString")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<tblApplicationStatu> tblApplicationStatus { get; set; }
        public DbSet<tblAssignmentDueDate> tblAssignmentDueDates { get; set; }
        public DbSet<tblAssignmentHeader> tblAssignmentHeaders { get; set; }
        public DbSet<tblAssignmentQuestionAid> tblAssignmentQuestionAids { get; set; }
        public DbSet<tblAssignmentQuestionAnswer> tblAssignmentQuestionAnswers { get; set; }
        public DbSet<tblAssignmentQuestionType> tblAssignmentQuestionTypes { get; set; }
        public DbSet<tblAssingmentQuestion> tblAssingmentQuestions { get; set; }
        public DbSet<tblClass> tblClasses { get; set; }
        public DbSet<tblClassTeacher> tblClassTeachers { get; set; }
        public DbSet<tblDistrict> tblDistricts { get; set; }
        public DbSet<tblDivision> tblDivisions { get; set; }
        public DbSet<tblEntranceApplication> tblEntranceApplications { get; set; }
        public DbSet<tblEvaluationDetail> tblEvaluationDetails { get; set; }
        public DbSet<tblEvaluationHeader> tblEvaluationHeaders { get; set; }
        public DbSet<tblEvaluationResult> tblEvaluationResults { get; set; }
        public DbSet<tblEvaluationType> tblEvaluationTypes { get; set; }
        public DbSet<tblEventCalendar> tblEventCalendars { get; set; }
        public DbSet<tblEventcategory> tblEventcategories { get; set; }
        public DbSet<tblEventParticipant> tblEventParticipants { get; set; }
        public DbSet<tblExtraCurricularActivity> tblExtraCurricularActivities { get; set; }
        public DbSet<tblFunction> tblFunctions { get; set; }
        public DbSet<tblGrade> tblGrades { get; set; }
        public DbSet<tblGradeSubject> tblGradeSubjects { get; set; }
        public DbSet<tblHouse> tblHouses { get; set; }
        public DbSet<tblMessageType> tblMessageTypes { get; set; }
        public DbSet<tblParent> tblParents { get; set; }
        public DbSet<tblParentObservationType> tblParentObservationTypes { get; set; }
        public DbSet<tblParentStudent> tblParentStudents { get; set; }
        public DbSet<tblParentToSchoolMessageDetail> tblParentToSchoolMessageDetails { get; set; }
        public DbSet<tblParentToSchoolMessageHeader> tblParentToSchoolMessageHeaders { get; set; }
        public DbSet<tblProvince> tblProvinces { get; set; }
        public DbSet<tblQualification> tblQualifications { get; set; }
        public DbSet<tblRelashionship> tblRelashionships { get; set; }
        public DbSet<tblSchool> tblSchools { get; set; }
        public DbSet<tblSchoolCalendar> tblSchoolCalendars { get; set; }
        public DbSet<tblSchoolCategory> tblSchoolCategories { get; set; }
        public DbSet<tblSchoolExtraCurricularActivity> tblSchoolExtraCurricularActivities { get; set; }
        public DbSet<tblSchoolGrade> tblSchoolGrades { get; set; }
        public DbSet<tblSchoolGroup> tblSchoolGroups { get; set; }
        public DbSet<tblSchoolRank> tblSchoolRanks { get; set; }
        public DbSet<tblSchoolSubject> tblSchoolSubjects { get; set; }
        public DbSet<tblSchoolToParentMessageDetail> tblSchoolToParentMessageDetails { get; set; }
        public DbSet<tblSchoolToParentMessageHeader> tblSchoolToParentMessageHeaders { get; set; }
        public DbSet<tblStudent> tblStudents { get; set; }
        public DbSet<tblStudentExtraCurricularActivity> tblStudentExtraCurricularActivities { get; set; }
        public DbSet<tblStudentOptionalSubject> tblStudentOptionalSubjects { get; set; }
        public DbSet<tblSubject> tblSubjects { get; set; }
        public DbSet<tblSubjectCategory> tblSubjectCategories { get; set; }
        public DbSet<tblTeacher> tblTeachers { get; set; }
        public DbSet<tblTeacherCategory> tblTeacherCategories { get; set; }
        public DbSet<tblTeacherExtraCurricularActivity> tblTeacherExtraCurricularActivities { get; set; }
        public DbSet<tblTeacherQualification> tblTeacherQualifications { get; set; }
        public DbSet<tblTeacherSchool> tblTeacherSchools { get; set; }
        public DbSet<tblTeacherSubject> tblTeacherSubjects { get; set; }
        public DbSet<tblTimeTable> tblTimeTables { get; set; }
        public DbSet<tblUser> tblUsers { get; set; }
        public DbSet<tblUserCategory> tblUserCategories { get; set; }
        public DbSet<tblUserCategoryFunction> tblUserCategoryFunctions { get; set; }
    
        public virtual ObjectResult<SMGTgetTeacher_Result> SMGTgetTeacher(Nullable<long> teacherID)
        {
            var teacherIDParameter = teacherID.HasValue ?
                new ObjectParameter("TeacherID", teacherID) :
                new ObjectParameter("TeacherID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetTeacher_Result>("SMGTgetTeacher", teacherIDParameter);
        }
    
        public virtual ObjectResult<SMGTgetTeachers_Result> SMGTgetTeachers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetTeachers_Result>("SMGTgetTeachers");
        }
    
        public virtual ObjectResult<SMGTgetAllTeachers_Result> SMGTgetAllTeachers(string schoolid, string userId, string isActive)
        {
            var schoolidParameter = schoolid != null ?
                new ObjectParameter("Schoolid", schoolid) :
                new ObjectParameter("Schoolid", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var isActiveParameter = isActive != null ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetAllTeachers_Result>("SMGTgetAllTeachers", schoolidParameter, userIdParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<SMGTgetTeacherQualification_Result> SMGTgetTeacherQualification(Nullable<long> teacherId)
        {
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("TeacherId", teacherId) :
                new ObjectParameter("TeacherId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetTeacherQualification_Result>("SMGTgetTeacherQualification", teacherIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetTeacherExActivity_Result> SMGTgetTeacherExActivity(Nullable<long> teacherID)
        {
            var teacherIDParameter = teacherID.HasValue ?
                new ObjectParameter("TeacherID", teacherID) :
                new ObjectParameter("TeacherID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetTeacherExActivity_Result>("SMGTgetTeacherExActivity", teacherIDParameter);
        }
    
        public virtual ObjectResult<SMGTgetGradeSubjects_Result> SMGTgetGradeSubjects(string gradeId)
        {
            var gradeIdParameter = gradeId != null ?
                new ObjectParameter("GradeId", gradeId) :
                new ObjectParameter("GradeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetGradeSubjects_Result>("SMGTgetGradeSubjects", gradeIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetSchoolGrade_Result> SMGTgetSchoolGrade(string schoolId)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetSchoolGrade_Result>("SMGTgetSchoolGrade", schoolIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetSchoolTeacher_Result> SMGTgetSchoolTeacher(string schoolId)
        {
            var schoolIdParameter = schoolId != null ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetSchoolTeacher_Result>("SMGTgetSchoolTeacher", schoolIdParameter);
        }
    
        public virtual ObjectResult<SMGTgetTeacherSubjects_Result> SMGTgetTeacherSubjects(Nullable<long> teacherId)
        {
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("TeacherId", teacherId) :
                new ObjectParameter("TeacherId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SMGTgetTeacherSubjects_Result>("SMGTgetTeacherSubjects", teacherIdParameter);
        }
    
        public virtual int SMGTDeleteTeacherExtraCurricularActivity(Nullable<long> teacherid, string schoolid, string activityCode)
        {
            var teacheridParameter = teacherid.HasValue ?
                new ObjectParameter("Teacherid", teacherid) :
                new ObjectParameter("Teacherid", typeof(long));
    
            var schoolidParameter = schoolid != null ?
                new ObjectParameter("Schoolid", schoolid) :
                new ObjectParameter("Schoolid", typeof(string));
    
            var activityCodeParameter = activityCode != null ?
                new ObjectParameter("ActivityCode", activityCode) :
                new ObjectParameter("ActivityCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SMGTDeleteTeacherExtraCurricularActivity", teacheridParameter, schoolidParameter, activityCodeParameter);
        }
    }
}
