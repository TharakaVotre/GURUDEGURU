@model GDWEBSolution.Models.Evaluation.EvaluationModel

<div class="row">
    <div class="col-md-12">
        <h3>School Evaluation</h3>
        <div class="panel panel-default">
            <div class="panel-heading">School Evaluation  </div>
            <div class="panel-body">
                <ul class="nav nav-tabs">
                    <li class="active"><a href="#bio" data-toggle="tab" aria-expanded="true">Add Evaluation</a></li>
                    <li class=""><a href="#EvaluatonClass" data-toggle="tab" aria-expanded="false">Evaluation By Class</a></li>
                        @*<li class=""><a href="#excactivity" data-toggle="tab" aria-expanded="false">EXtra Curicular</a></li>*@
                    @*<li class="disabled"><a>Disabled</a></li>
                        <li class="dropdown">
                            <a class="dropdown-toggle" data-toggle="dropdown" href="#" aria-expanded="false">
                          Dropdown <span class="caret"></span>
                        </a>
                            <ul class="dropdown-menu">
                                <li><a href="#dropdown1" data-toggle="tab">Action</a></li>
                                <li class="divider"></li>
                                <li><a href="#dropdown2" data-toggle="tab">Another action</a></li>
                            </ul>
                        </li>*@
                </ul>
                <br>
                <div id="myTabContent" class="tab-content">
                    <div class="tab-pane fade active in" id="bio">
                        @*@using (Html.BeginForm("Create", "EvaluationbySchool",
    FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {*@
                            @Html.AntiForgeryToken()
                            <form id="FrmANT" class="form-horizontal">
                            <div class="form-horizontal">


                                @*<form id="FrmANT" action="/School/Create"
                                    enctype="multipart/form-data"
                                    method="post"
                                    >*@
                                <br />

                                @*<div class="form-group">

                                        @Html.LabelFor(m => m.SchoolId, new { @class = "col-sm-2 control-label" })
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(model => model.SchoolId, new { @class = "form-control", @placeholder = "School Id" })
                                            <span class="help-block m-b-none" id="CategoryNameError"></span>
                                            @Html.ValidationMessageFor(model => model.SchoolId, null, new { @class = "text-danger" })
                                        </div>
                                    </div>*@

                               
                              
                                  
                              
                          
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.EvaluationType, new { @class = "col-sm-2 control-label" })
                                        <div class="col-sm-4">
                                            @Html.DropDownListFor(model => model.EvaluationType, ViewBag.EvaluationList as SelectList, "", new { @class = "form-control", @placeholder = "School Group" })
                                        </div>
                                        <div class="col-sm-2">
                                            @Html.ValidationMessageFor(model => model.EvaluationType, null, new { @class = "text-danger" })
                                        </div>
                                    </div>
                             
                                

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.EvaluationDescription, new { @class = "col-sm-2 control-label" })
                                        <div class="col-sm-4">
                                            @Html.TextBoxFor(model => model.EvaluationDescription, new { @class = "form-control", @placeholder = "Add Description" })
                                        </div>
                                        <div class="col-sm-2">
                                            @Html.ValidationMessageFor(model => model.EvaluationDescription, null, new { @class = "text-danger" })
                                        </div>
                                    </div>

                               


                               

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.TestPaperFee, new { @class = "col-sm-2 control-label" })
                                        <div class="col-sm-4">
                                            @Html.TextBoxFor(model => model.TestPaperFee, new { @class = "form-control", @placeholder = "Test Paper Fee" })
                                            <span class="help-block m-b-none" id="CategoryNameError"></span>
                                        </div>
                                        <div class="col-sm-2">
                                            @Html.ValidationMessageFor(model => model.TestPaperFee, null, new { @class = "text-danger" })
                                        </div>
                                    </div>
                              


                               

                                    @*<div class="form-group">
                                        @Html.LabelFor(m => m.TestPaperFee, new { @class = "col-sm-2 control-label" })
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(model => model.CreatedDate, new { @class = "form-control", @placeholder = "School Name" })
                                            <span class="help-block m-b-none" id="CategoryNameError"></span>
                                        </div>
                                        <div class="col-sm-2">
                                            @Html.ValidationMessageFor(model => model.TestPaperFee, null, new { @class = "text-danger" })
                                        </div>
                                    </div>*@
                               

                                @*<div class="form-group">
                                        @Html.LabelFor(m => m.StudentId, new { @class = "col-sm-2 control-label" })
                                        <div class="col-sm-8">

                                            @Html.DropDownListFor(model => model.StudentId, ViewBag.StudentIdList as SelectList, "", new { @class = "form-control", @placeholder = "School Group" })
                                            <span class="help-block m-b-none" id="CategoryNameError"></span>
                                        </div>
                                        <div class="col-sm-2">
                                            @Html.ValidationMessageFor(model => model.StudentId, null, new { @class = "text-danger" })
                                        </div>
                                    </div>*@        




























                                <div class="form-group">


                                    @* @Html.HiddenFor(m=>m.Name)*@
                                    @*        @Html.DropDownListFor(model => model.DepartmentId, ViewBag.DepartmentList as SelectList, "--select--", new { @class = "form-control" })*@

                                    @*        @Html.TextBoxFor(model => model.Address, new { @class = "form-control", @placeholder ="Address" })*@
                                    @*<a href="#" id="btnSubmit" class="btn btn-success btn-block">@if(Model.EmployeeId>0){<span>Update</span> }else{<span>Save</span>} </a>*@
                                </div>








                                <div class="form-group">
                                    <div class="col-sm-8 col-sm-offset-2">
                                        @*<button class="btn btn-default" type="submit">Cancel</button>*@
                                        @*<a href="#" id="btnCreateTeacher" class="btn btn-primary">Save</a>*@
                                        <button type="reset" id="btnAddQualification" onclick="AddEvaluation()" class="btn btn-primary"><span class="fa fa-bookmark"></span> Save</button>
                                    </div>
                                </div>
                            </div>
                        @*}*@
                        </form>

                        <div id="showEvaluations">

                        </div>


                    </div>
                    <div class="tab-pane fade" id="EvaluatonClass">

                        @{Html.RenderPartial("Evaluationbyclass");}
                        <div id="showgrade">

                        </div>

                    </div>
                    <div class="tab-pane fade" id="Housee">

                        <div id="showHouse">




                        </div>

                    </div>
                    <div class="tab-pane fade" id="excactivity">

                        <div id="showexactivity">


                        </div>

                    </div>

                    <div class="tab-pane fade" id="subjects">

                        <div id="showSubjects">


                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="myModal" class="modal fade" role="dialog" tabindex="-1" aria-labelledby="myModalLabel">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content" id="MyModelBody">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Error !</h4>
            </div>
            <div class="modal-body">
                <label id="ErrorLable" class="control-label" style="color: #e83a3a"></label>
            </div>
        </div>
    </div>
</div>
<script>
    document.getElementById('SuccesModel').style.display = "block";
    function hideSuccesModel() {
        document.getElementById('SuccesModel').style.display = "none";
    }
</script>


   <div id="SuccesModel" class="modal fade" role="dialog" tabindex="-1" aria-labelledby="myModalLabel">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content" id="SuccessModelBody">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Successful !</h4>
            </div>
            <div class="modal-body">
                <label id="SuccesLable" class="control-label" style="color: #3bc91f"></label>
            </div>
        </div>
    </div>
</div>

<div id="deleteModel" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content" id="DeleteModelBody">
        </div>
    </div>
</div>

<script>

    var loadSgrade = function (value) {
        debugger
        //     $('#myTabContent').load('/Student/Createe?SchoolId=' + value);

        window.location.href = '@Url.Action("Create", "Student", new { SchoolId = "ID" })'.replace("ID", value);


   }


</script>


<script type="text/javascript">
    var AddEvaluation = function () {
        //debugger
        var myformdata = $("#FrmANT").serialize();

        //if (!$("#FrmANT").valid()) {
        //    return false;
        //}

        $.ajax({

            type: "POST",
            url: "/EvaluationbySchool/AddSchoolGrade",
            data: myformdata,
            success: function (result) {
                //$("#loaderDiv").hide();
                // $("#myModal").modal("hide");
                if (result != "Exception" && result != "Exits") {
                    debugger
                    //window.location.href = "/Teacher/Create";
                  //  $("#SchoolId").val(result);

                    //  $('#ResultDIV').load('/Teacher/ShowTeacherQualificatoin', ShowTeacherQualificatoinAction);
                    $('#showgrade').load('/EvaluationbySchool/ShowEvaluation?SchoolId=' + result);
                    $("#SuccesLable").text("Evaluation Added");
                    // $("#btnAddQualification").prop('value', 'Save');
                    $("#SuccesModel").modal("show");
                }
                else if (result == "Exception") {
                    debugger
                    //$("#ErrorUName").prop('value', 'User Name Already Exits');
                    $("#ErrorLable").text("Exception Error Occurd");
                    //$("#btnAddQualification").prop('value', 'Save');
                    $("#myModal").modal("show");
                }
                else if (result == "Exits") {
                    //$("#ErrorUName").prop('value', 'User Name Already Exits');
                    $("#ErrorLable").text("This Grade is Already Assigned to this School");
                    //$("#btnAddQualification").prop('value', 'Save');
                    $("#myModal").modal("show");


                }
                else {

                }

            }

        })
    }



    $(function () {
        // This will make every element with the class "date-picker" into a DatePicker element
       // $("#DateOfBirth").datepicker();
        //    $("#CreatedDate").datetimepicker();
       // $("#CreatedDate").datetimepicker();
       $("#CreatedDate").datepicker();
      
        
        
        
    });




    var loadStudents = function (value) {


            var selectedItem = value;
            var SchoolId = $("#SchoolId").val();
            var AcademicYear = $("#AcademicYear").val();
            var GradeId = $("#GradeId").val();
            var ClassId = $("#ClassId").val();

            var ddlStates = $("#StudentId");
            //var statesProgress = $("#states-loading-progress");
            //statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.RouteUrl("StudentoptionalSubjectStud"))",
                data: { "GradeId": GradeId, "SchoolId": SchoolId, "AcademicYear": AcademicYear, "ClassId": ClassId },
            success: function (data) {
                ddlStates.html('');
                $.each(data, function (ActivityCode, option) {
                    ddlStates.append($('<option></option>').val(option.StudentId).html(option.StudentName));
                });

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve states.');

            }
        });
        }


    function GetStudentTable() {
        $("#showstds").show();
        var SchoolId1 = $("#SchoolId").val();
        var AcademicYear1 = $("#AcademicYear").val();
        var GradeId1 = $("#GradeId").val();
        var ClassId1 = $("#ClassId").val();

        $.ajax({
            url: "/StudentOptionalSubject/GetAllContacts",
            type: "GET",
            contentType: "application/json; charset=utf-8",
            data: {"GradeId1": GradeId1, "SchoolId1": SchoolId1, "AcademicYear1": AcademicYear1, "ClassId1": ClassId1},
            dataType: "json",
            success: function (data) {
                var row = "";
                $.each(data, function (index, item) {
                    row += "<tr><td><input type='checkbox'value='" + item.StudentIdL + "' name='chooseRecipient' class='my_chkBox' /></td><td>" + item.StudentName+ "</td>";
                });
                $("#contacts").html(row);
            },
            error: function (result) {
                alert("Error");
            }
        });
    }


    var loadClass = function (value) {
        $("#showStateLga").show();
        var selectedItem = value;
        var SchoolId=$("#SchoolId").val();

        var ddlStates = $("#ClassId");
        //var statesProgress = $("#states-loading-progress");
        //statesProgress.show();
        $.ajax({
            cache: false,
            type: "GET",
            url: "@(Url.RouteUrl("Studentclass"))",
            data: { "GradeId": selectedItem, "SchoolId": SchoolId },
        success: function (data) {
            ddlStates.html('');
            $.each(data, function (ActivityCode, option) {
                ddlStates.append($('<option></option>').val(option.ClassId).html(option.ClassName));
            });

        },
        error: function (xhr, ajaxOptions, thrownError) {
            alert('Failed to retrieve states.');

        }
    });
    }

    var loadOptionalSubjects = function (value) {
        $("#showsubs").show();
        var selectedItem = value;
        var SchoolId = $("#SchoolId").val();
        var AcademicYear = $("#AcademicYear").val();
        var GradeId = $("#GradeId").val();

        var ddlStates = $("#SubjectId");
        //var statesProgress = $("#states-loading-progress");
        //statesProgress.show();
        $.ajax({
            cache: false,
            type: "GET",
            url: "@(Url.RouteUrl("StudentoptionalSubject"))",
            data: { "GradeId": GradeId, "SchoolId": SchoolId, "AcademicYear": AcademicYear },
        success: function (data) {
            ddlStates.html('');
            $.each(data, function (ActivityCode, option) {
                ddlStates.append($('<option></option>').val(option.SubjectId).html(option.SubjectName));
            });

        },
        error: function (xhr, ajaxOptions, thrownError) {
            alert('Failed to retrieve states.');

        }
    });
    }


    var loadEXactivse = function (value) {
        $("#showAcyr").show();
        $("#showGradess").show();

        var selectedItem = value;

        var ddlStates = $("#GradeId");
        //var statesProgress = $("#states-loading-progress");
        //statesProgress.show();
        $.ajax({
            cache: false,
            type: "GET",
            url: "@(Url.RouteUrl("Studentgrade"))",
            data: { "SchoolId": selectedItem },
        success: function (data) {
            ddlStates.html('');
            $.each(data, function (ActivityCode, option) {
                ddlStates.append($('<option></option>').val(option.GradeId).html(option.GradeName));
            });

        },
        error: function (xhr, ajaxOptions, thrownError) {
            alert('Failed to retrieve states.');

        }
    });
    }
</script>


