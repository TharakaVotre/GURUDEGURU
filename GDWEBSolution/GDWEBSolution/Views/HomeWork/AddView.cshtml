@model GDWEBSolution.Models.HomeWork.HomeWorkModel
<script>
   
    $(document).ready(function () {
        var date_input = $('input[name="DueDate"]'); //our date input has the name "date"
        date_input.datepicker({
            format: 'mm/dd/yyyy',
            todayHighlight: true,
            autoclose: true,
        })
    });
    

</script>

<div>

    <form id="upload" action="~/HomeWork/Create" method="post" enctype="multipart/form-data" style="color: #000;">
       
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add New Homework</h4>
            </div>
            <div class="modal-body">

                <div class="form-horizontal" >
                <div class="form-group">
                    @Html.LabelFor(m => m.GradeId, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-8">
                        @Html.DropDownList("GradeId", ViewBag.country as List<SelectListItem>, "", new { @class = "form-control", required = "required" })

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.ClassId, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-8">
                        @Html.DropDownList("ClassId", new SelectList("", "Value", "Text"), "", new { @class = "form-control", required = "required" })


                        
                    </div>
                </div>
                    <div class="form-group">
                    @Html.LabelFor(m => m.SubjectId, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-8">

                        @Html.DropDownList("SubjectId", new SelectList("", "Value", "Text"), "", new { @class = "form-control", required = "required" })
                       
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.FilePath, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-8">

                        <input type="file" id="uploadFile" name="File" required />

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.DueDate, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.DueDate, new { @class = "form-control", @placeholder = "Due Date", required = "required" })
                       
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.AssignmentDescription, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-8">
                        @Html.TextAreaFor(model => model.AssignmentDescription, new { @class = "form-control", @placeholder = "Description", required = "required" })
                       
                    </div>
                </div>

            

                

</div>


            </div>

            <div class="modal-footer">
                <input type="submit" class="btn btn-primary" />
            </div>

    </form>
   


</div>




<script type="text/javascript">


    $(document).ready(function () {

        $("#GradeId").change(function () {
            $("#ClassId").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getClass")',

                dataType: 'json',

                data: { id: $("#GradeId").val() },


                success: function (states) {


                    $.each(states, function (i, state) {
                        $("#ClassId").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');

                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })

        $("#GradeId").change(function () {
            $("#SubjectId").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("getSubject")',

                dataType: 'json',

                data: { id: $("#GradeId").val() },


                success: function (states) {


                    $.each(states, function (i, state) {
                        $("#SubjectId").append('<option value="' + state.Value + '">' +
                             state.Text + '</option>');

                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        })
    });

</script>

<style>
    #GradeId {
       
        width: 100% !important;
 
    }


   
    </style >

