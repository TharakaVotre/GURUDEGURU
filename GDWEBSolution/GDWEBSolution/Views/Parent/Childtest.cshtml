@model GDWEBSolution.Models.Parent.ParentModel

@{
    ViewBag.Title = "Parent";
}

<form id="FrmQA" class="form-horizontal">
    <div class="form-group">

        @Html.HiddenFor(m => m.UserId)

        @Html.LabelFor(m => m.SchoolId, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-3">

            @Html.DropDownListFor(model => model.SchoolId, ViewBag.SchoolDrpDown as SelectList, "", new { @class = "form-control", @placeholder = "School Group", @onchange = "loadEXactivse(this.value)" })

            @*@Html.DropDownListFor(model => model.SchoolId, ViewBag.SchoolgrddrpList as SelectList, "", new { @class = "form-control", @placeholder = "School Group", onchange = "document.location.href = '/School/ShowSchoolGrade?SchoolId=' + this.options[this.selectedIndex].value;" })*@

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.GradeId, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-4">
            @Html.DropDownListFor(model => model.GradeId, ViewBag.SchoolGradeList as SelectList, "", new { @class = "form-control", @placeholder = "School Group", @onchange = "loadClass(this.value)" })
        </div>
        <div class="col-sm-2">
            @Html.ValidationMessageFor(model => model.GradeId, null, new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ClassId, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-4">
            @Html.DropDownListFor(model => model.ClassId, ViewBag.classDrpDown as SelectList, "", new { @class = "form-control", @placeholder = "Class", @onclick = "loadStudents(this.value)" })
        </div>
        <div class="col-sm-2">
            @Html.ValidationMessageFor(model => model.ClassId, null, new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.StudentId, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-8">
            @*@Html.DropDownListFor(model => model.StudentId, ViewBag.StudentIdList as SelectList, "", new { @class = "form-control", @placeholder = "School Group" })*@
            @*@Html.DropDownListFor(model=>model.StudentId,Model.GetStudentList.Select(x=>new SelectListItem{Text=x.StudentName,Value=x.StudentId}),new {@class="form-control ",@multiple="true"})*@
            @Html.DropDownListFor(model => model.StudentId, ViewBag.StudentIdList as SelectList, "", new { @class = "form-control", @placeholder = "School Group" })
            <span class="help-block m-b-none" id="CategoryNameError"></span>
        </div>
        <div class="col-sm-2">
            @Html.ValidationMessageFor(model => model.StudentId, null, new { @class = "text-danger" })
        </div>
    </div>









    <div class="col-sm-2">
        <button type="Submit" id="btnAddQualification" onclick="AddChilde()" class="btn btn-primary"><span class="fa fa-bookmark"></span> Save</button>
    </div>

    <div class="hr-dashed"></div>
    @*     <h4 style="padding-left:120px;">Qualifications</h4>
        <div class="hr-dashed"></div>*@

</form>

<script>

    var AddChilde = function () {
        //debugger
        var myformdata = $("#FrmQA").serialize();

        //if (!$("#FrmANT").valid()) {
        //    return false;
        //}

        $.ajax({

            type: "POST",
            url: "/Parent/AddChild",
            data: myformdata,
            success: function (result) {
                //$("#loaderDiv").hide();
                // $("#myModal").modal("hide");
                if (result != "Exception" && result != "Exits") {
                    debugger
                    //window.location.href = "/Teacher/Create";
                    $("#SchoolId").val(result);

                    //  $('#ResultDIV').load('/Teacher/ShowTeacherQualificatoin', ShowTeacherQualificatoinAction);
                    $('#showchild').load('/Parent/ShowchildAddt?ParentId=' + result);
                    $("#SuccesLable").text("Grade Added");
                    // $("#btnAddQualification").prop('value', 'Save');
                    $("#SuccesModel").modal("show");
                }
                else if (result == "Exception") {
                    debugger
                    //$("#ErrorUName").prop('value', 'User Name Already Exits');
                    $("#ErrorLable").text("Exception Error Occurd");
                    //$("#btnAddQualification").prop('value', 'Save');
                    $("#myModal").modal("show");
                }
                else if (result == "Exits") {
                    //$("#ErrorUName").prop('value', 'User Name Already Exits');
                    $("#ErrorLable").text("This Grade is Already Assigned to this School");
                    //$("#btnAddQualification").prop('value', 'Save');
                    $("#myModal").modal("show");


                }
                else {

                }

            }

        })
    }


    
    var loadStudents = function (value) {
        var selectedItem = value;
        var SchoolId = $("#SchoolId").val();
        var AcademicYear = "%";
        var GradeId = $("#GradeId").val();
        var ClassId = $("#ClassId").val();

        var ddlStates = $("#StudentId").val();
        //var statesProgress = $("#states-loading-progress");
        //statesProgress.show();
        $.ajax({
            cache: false,
            type: "GET",
            url: "@(Url.RouteUrl("StudentoptionalSubjectStud"))",
            data: { "GradeId": GradeId, "SchoolId": SchoolId, "AcademicYear": AcademicYear, "ClassId": ClassId },
        success: function (data) {
            ddlStates.html('');
            $.each(data, function (ActivityCode, option) {
                ddlStates.append($('<option></option>').val(option.StudentId).html(option.StudentName));
            });

        },
        error: function (xhr, ajaxOptions, thrownError) {
            alert('Failed to retrieve states.');

        }
    });
    }


    var loadClass = function (value) {
        var selectedItem = value;
        var SchoolId = $("#SchoolId").val();

        var ddlStates = $("#ClassId");
        //var statesProgress = $("#states-loading-progress");
        //statesProgress.show();
        $.ajax({
            cache: false,
            type: "GET",
            url: "@(Url.RouteUrl("Studentclass"))",
            data: { "GradeId": selectedItem, "SchoolId": SchoolId },
        success: function (data) {
            ddlStates.html('');
            $.each(data, function (ActivityCode, option) {
                ddlStates.append($('<option></option>').val(option.ClassId).html(option.ClassName));
            });

        },
        error: function (xhr, ajaxOptions, thrownError) {
            alert('Failed to retrieve states.');

        }
    });
    }

    var loadOptionalSubjects = function (value) {
        var selectedItem = value;
        var SchoolId = $("#SchoolId").val();
        // var AcademicYear = $("#AcademicYear").val();
        var AcademicYear ='%';
        var GradeId = $("#GradeId").val();

        var ddlStates = $("#SubjectId");
        //var statesProgress = $("#states-loading-progress");
        //statesProgress.show();
        $.ajax({
            cache: false,
            type: "GET",
            url: "@(Url.RouteUrl("StudentoptionalSubject"))",
            data: { "GradeId": GradeId, "SchoolId": SchoolId, "AcademicYear": AcademicYear },
        success: function (data) {
            ddlStates.html('');
            $.each(data, function (ActivityCode, option) {
                ddlStates.append($('<option></option>').val(option.SubjectId).html(option.SubjectName));
            });

        },
        error: function (xhr, ajaxOptions, thrownError) {
            alert('Failed to retrieve states.');

        }
    });
    }


    var loadEXactivse = function (value) {
        var selectedItem = value;

        var ddlStates = $("#GradeId");
        //var statesProgress = $("#states-loading-progress");
        //statesProgress.show();
        $.ajax({
            cache: false,
            type: "GET",
            url: "@(Url.RouteUrl("Studentgrade"))",
            data: { "SchoolId": selectedItem },
        success: function (data) {
            ddlStates.html('');
            $.each(data, function (ActivityCode, option) {
                ddlStates.append($('<option></option>').val(option.GradeId).html(option.GradeName));
            });

        },
        error: function (xhr, ajaxOptions, thrownError) {
            alert('Failed to retrieve states.');

        }
    });
    }

    var loadGrades = function (value) {
        debugger
        $('#showgrade').load('/School/ShowSchoolGrade?SchoolId=' + value);
    }
</script>

