@model GDWEBSolution.Models.Parent.ParentModel

@{
    ViewBag.Title = "Create";
}

<div class="row">
    <div class="col-md-12">
        <h3>Parent</h3>
        <div class="panel panel-default">
            <div class="panel-heading">New Parent</div>
            <div class="panel-body">
                <ul class="nav nav-tabs">
                    <li class="active"><a href="#bio" data-toggle="tab" aria-expanded="true">New Parent</a></li>
                    <li class=""><a href="#AddChild" data-toggle="tab" aria-expanded="false">Add Child</a></li>
                    @*<li class=""><a href="#qualification" data-toggle="tab" aria-expanded="false">Grade</a></li>*@
                    @*<li class=""><a href="#excactivity" data-toggle="tab" aria-expanded="false">EXtra Curicular</a></li>*@
                    @*<li class="disabled"><a>Disabled</a></li>
                        <li class="dropdown">
                            <a class="dropdown-toggle" data-toggle="dropdown" href="#" aria-expanded="false">
                          Dropdown <span class="caret"></span>
                        </a>
                            <ul class="dropdown-menu">
                                <li><a href="#dropdown1" data-toggle="tab">Action</a></li>
                                <li class="divider"></li>
                                <li><a href="#dropdown2" data-toggle="tab">Another action</a></li>
                            </ul>
                        </li>*@
                </ul>
                <br>
                <div id="myTabContent" class="tab-content">
                    <div class="tab-pane fade active in" id="bio">
                       <form enctype="multipart/form-data">
                            @*<form id="FrmANT" class="form-horizontal">*@
                            <div class="form-horizontal">


                                @*<form id="FrmANT" action="/School/Create"
                                    enctype="multipart/form-data"
                                    method="post"
                                    >*@
                                <br />
                              
                                @*<div class="form-group">

                                        @Html.LabelFor(m => m.SchoolId, new { @class = "col-sm-2 control-label" })
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(model => model.SchoolId, new { @class = "form-control", @placeholder = "School Id" })
                                            <span class="help-block m-b-none" id="CategoryNameError"></span>
                                            @Html.ValidationMessageFor(model => model.SchoolId, null, new { @class = "text-danger" })
                                        </div>
                                    </div>*@

                                <div class="form-group">
                                    @Html.LabelFor(m => m.ParentName, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(model => model.ParentName, new { @class = "form-control", @placeholder = "Parent Name" })
                                      
                                      
                                    </div>

                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.ParentName, null, new { @class = "text-danger" })
                                    </div>
                                </div>


                                

                               

                                

                                <div class="form-group">
                                    @Html.LabelFor(m => m.RelationshipId, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-8">
                                      
                                        @Html.DropDownListFor(model => model.RelationshipId, ViewBag.RelationshipList as SelectList, "", new { @class = "form-control", @placeholder = "Realtionship" })
                                    
                                    </div>
                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.RelationshipId, null, new { @class = "text-danger" })
                                    </div>
                                </div>


                               

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Address1, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-6">
                                        
                                        @Html.TextBoxFor(model => model.Address1, new { @class = "form-control input-lg mb", @placeholder = "Address " })
                                         <div class="col-sm-12">
                                        @Html.ValidationMessageFor(model => model.Address1, null, new { @class = "text-danger" })
                                    </div>
                                           
                                        @Html.TextBoxFor(model => model.Address2, new { @class = "form-control mb", @placeholder = "Address **" })
                                         <div class="col-sm-12">
                                        @Html.ValidationMessageFor(model => model.Address2, null, new { @class = "text-danger" })
                                    </div>
                                        @Html.TextBoxFor(model => model.Address3, new { @class = "form-control input-sm", @placeholder = "Address **" })

                                    </div>

                                   
                                   
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.HomeTelephone, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-4">
                                        @Html.TextBoxFor(model => model.HomeTelephone, new { @class = "form-control", @placeholder = "Telephone No" })

                                    </div>
                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.HomeTelephone, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.PersonalEmail, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-4">
                                        @Html.TextBoxFor(model => model.PersonalEmail, new { @class = "form-control", @placeholder = "Email Address" })
                                        <div class="col-sm-12">
                                            @Html.ValidationMessageFor(model => model.PersonalEmail, null, new { @class = "text-danger" })
                                        </div>
                                    </div>
                                   
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.PersonalMobile, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-4">
                                        @Html.TextBoxFor(model => model.PersonalMobile, new { @class = "form-control", @placeholder = "Telephone No" })

                                    </div>
                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.PersonalMobile, null, new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Occupation, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-4">
                                        @Html.TextBoxFor(model => model.Occupation, new { @class = "form-control", @placeholder = "Occupation" })

                                    </div>
                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.Occupation, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                           

                                <div class="form-group">
                                    @Html.LabelFor(m => m.OfficeAddress1, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-6">
                                        @Html.TextBoxFor(model => model.OfficeAddress1, new { @class = "form-control input-lg mb", @placeholder = "Address " })
                                        @Html.TextBoxFor(model => model.OfficeAddress2, new { @class = "form-control mb", @placeholder = "Address **" })
                                        @Html.TextBoxFor(model => model.OfficeAddress3, new { @class = "form-control input-sm", @placeholder = "Address **" })

                                    </div>

                                   
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.OfficePhone, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(model => model.OfficePhone, new { @class = "form-control", @placeholder = "Office No" })

                                        <span class="help-block m-b-none" id="CategoryNameError"></span>
                                    </div>

                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.OfficePhone, null, new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.officeEmail, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-4">
                                        @Html.TextBoxFor(model => model.officeEmail, new { @class = "form-control", @placeholder = "Office Email" })

                                    </div>
                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.officeEmail, null, new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.NIC, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-4">
                                        @Html.TextBoxFor(model => model.NIC, new { @class = "form-control", @placeholder = "NIC" })

                                    </div>
                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.NIC, null, new { @class = "text-danger" })
                                    </div>
                                </div>

                             

                                


                                <div class="form-group">
                                    @Html.LabelFor(m => m.DateofBirth, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-4">
                                        @Html.TextBoxFor(model => model.DateofBirth, new { @class = "form-control", @placeholder = "Date of Birth" })

                                    </div>
                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.DateofBirth, null, new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.UserId, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-4">
                                        @Html.TextBoxFor(model => model.UserId, new { @class = "form-control", @placeholder = "User ID" })


                                    </div>

                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.UserId, null, new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(m => m.Password, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-4">
                                        @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @placeholder = "Password", type = "Password" })

                                    </div>
                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.Password, null, new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-4">
                                        @Html.TextBoxFor(model => model.ConfirmPassword, new { @class = "form-control", @placeholder = "Password", type = "Password" })

                                    </div>
                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, null, new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(m => m.File, new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(m => m.File, new { type = "file", @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.File, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                            







                                












                                <div class="form-group">


                                    @* @Html.HiddenFor(m=>m.Name)*@
                                    @*        @Html.DropDownListFor(model => model.DepartmentId, ViewBag.DepartmentList as SelectList, "--select--", new { @class = "form-control" })*@

                                    @*        @Html.TextBoxFor(model => model.Address, new { @class = "form-control", @placeholder ="Address" })*@
                                    @*<a href="#" id="btnSubmit" class="btn btn-success btn-block">@if(Model.EmployeeId>0){<span>Update</span> }else{<span>Save</span>} </a>*@
                                </div>





                                <div class="form-group">
                                    <div class="col-sm-8 col-sm-offset-2">
                                        @*<button class="btn btn-default" type="submit">Cancel</button>*@
                                        @*<a href="#" id="btnCreateTeacher" class="btn btn-primary">Save</a>*@
                                        @*<button type="submit"  id="btnSubmit" onclick="" class="btn btn-primary"><span class="fa fa-bookmark"></span> Save</button>*@
                                         <input type="submit" class="btn btn-primary" />
                                        <button type="button" class="btn btn-primary" onclick="ShowView(1)"><span class="fa fa-plus"></span> Back</button>
                                    </div>
                                </div>
                            </div>
                                 </form>
                       
                        @*</form>*@
                    </div>
                    @*<div class="tab-pane fade" id="qualification">
                        @{Html.RenderPartial("Childtest");}

                        <div id="showgrade">
                           
                            @{ Html.RenderAction("ShowchildAddt", new { ParentId = "0" }); }
                        </div>

                    </div>*@


                    <div class="tab-pane fade" id="qualification">


                        <div id="showgrade">


                        </div>

                    </div>
                    <div class="tab-pane fade" id="AddChild">

                        @{Html.RenderPartial("AddChild");}
                        <div id="showChild">
                           
                            @{Html.RenderAction("ShowchildAdd", new { ParentId1 = "0" });}

                        </div>

                    </div>
                    <div class="tab-pane fade" id="excactivity">

                        <div id="showexactivity">
                           


                        </div>

                    </div>

                    <div class="tab-pane fade" id="subjects">

                        <div id="showSubjects">


                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="myModal" class="modal fade" role="dialog" tabindex="-1" aria-labelledby="myModalLabel">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content" id="MyModelBody">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Error !</h4>
            </div>
            <div class="modal-body">
                <label id="ErrorLable" class="control-label" style="color: #e83a3a"></label>
            </div>
        </div>
    </div>
</div>

<div id="SuccesModel" class="modal fade" role="dialog" tabindex="-1" aria-labelledby="myModalLabel">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content" id="SuccessModelBody">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Successful !</h4>
            </div>
            <div class="modal-body">
                <label id="SuccesLable" class="control-label" style="color: #3bc91f"></label>
            </div>
        </div>
    </div>
</div>

<div id="deleteModel" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content" id="DeleteModelBody">
        </div>
    </div>
</div>

<script>

    var ShowView = function (bookid) {
        var Url = "/Parent/Index";
        window.location.href = Url;
    }


    var loadSgrade = function (value) {
        debugger
        //     $('#myTabContent').load('/Student/Createe?SchoolId=' + value);

        window.location.href = '@Url.Action("Create", "Student", new { SchoolId = "ID" })'.replace("ID", value);


   }


</script>

<script >
    //$(document).ready(function () {
    //    var date_input = $('input[name="DateofBirth"]'); //our date input has the name "date"
    //    date_input.datepicker({
    //        format: 'mm/dd/yyyy',
    //        todayHighlight: true,
    //        autoclose: true,
    //    })
    //});


   
    
    
    $('#DateofBirth').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true
        })
    $('#DateofBirth').val("");

  

     

  


</script>

<script>
   





</script>

<script type="text/javascript">

    $(function () {
        // When your form is submitted
        $("form").submit(function (e) {
            // Prevent the default behavior
            e.preventDefault();
            var acl = this;
           

            

            var ddlParent = $("#ParentId");

            // Serialize your form
            var formData = new FormData($(this)[0]);

            // Make your POST
            $.ajax({

                type: "POST",
                url: "/Parent/Create",
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function (result) {
                   
                    //$("#loaderDiv").hide();
                    // $("#myModal").modal("hide");
                    if (result != "Exception" && result != "Exits" && result != "error") {
                        debugger
                     
                        acl.reset();
                       
                        //window.location.href = "/Teacher/Create";
                       
                        $.ajax({
                            cache: false,
                            type: "GET",
                            url: "@(Url.RouteUrl("GetParentfrmscl"))",
            //data: { "SchoolId": selectedItem },
            success: function (data) {
                ddlParent.html('');
                ddlParent.append($('<option></option>').val("").html(""));
                $.each(data, function (ActivityCode, option) {
                    ddlParent.append($('<option></option>').val(option.ParentId).html(option.ParentName));
                });

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve states.');

            }
                           });



                        // var res = result.split("!");
                        //  $('#ResultDIV').load('/Teacher/ShowTeacherQualificatoin', ShowTeacherQualificatoinAction);
                        // $('#showexactivity').load('/Student/ShowstudentExactivty?SchoolId=' + res[0] + '&StudentId=' + res[1]);

                        //window.location.href = "/Parent/Create?id=1";
                       //alert("gg");
                        $("#SuccesLable").text("Parent Created");
                        // $("#btnAddQualification").prop('value', 'Save');
                        $("#SuccesModel").modal("show");
                    }
                    else if (result == "Exception") {
                        debugger
                        //$("#ErrorUName").prop('value', 'User Name Already Exits');
                        $("#ErrorLable").text("Exception Error Occurd");
                        //$("#btnAddQualification").prop('value', 'Save');
                        $("#myModal").modal("show");
                    }
                    else if (result == "Exits") {
                        //$("#ErrorUName").prop('value', 'User Name Already Exits');
                        $("#ErrorLable").text("There is already a User with this User Id");
                        //$("#btnAddQualification").prop('value', 'Save');
                        $("#myModal").modal("show");


                    }
                    else {

                    }

                }

            })
        });
    })



</script>










