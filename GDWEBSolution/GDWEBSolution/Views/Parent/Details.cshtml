
@model GDWEBSolution.Models.Parent.ParentModel
<div class="row">
    <div class="col-md-12">

        <div class="panel panel-default">
            <div class="panel-heading">Parent Detail  </div>
            <div class="panel-body">
                <div id="myTabContent" class="tab-content">
                    <div class="tab-pane fade active in" id="bio">
                   <form id="frm1">
                            @Html.AntiForgeryToken()
                            @*<form id="FrmANT" class="form-horizontal">*@
                       <Div class="form-horizontal">


                           @*<form id="FrmANT" action="/School/Create"
            enctype="multipart/form-data"
            method="post"
            >*@
                           <br />

                           @*<div class="form-group">

                @Html.LabelFor(m => m.SchoolId, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-8">
                    @Html.TextBoxFor(model => model.SchoolId, new { @class = "form-control", @placeholder = "School Id" })
                    <span class="help-block m-b-none" id="CategoryNameError"></span>
                    @Html.ValidationMessageFor(model => model.SchoolId, null, new { @class = "text-danger" })
                </div>
            </div>*@<Div class="col-sm-8">

                           <div class="form-group">
                               @Html.LabelFor(m => m.ParentName, new { @class = "col-sm-2 control-label" })
                               <div class="col-sm-8">
                                   @Html.TextBoxFor(model => model.ParentName, new { @class = "form-control", @placeholder = "School Name", @readonly = "readonly" })

                                   
                               </div>

                              
                           </div>





                           <div class="form-group">
                               @Html.LabelFor(m => m.RelationshipId, new { @class = "col-sm-2 control-label" })
                               <div class="col-sm-8">
                                   @Html.TextBoxFor(model => model.RelationshipName, new { @class = "form-control", @placeholder = "School Name", @readonly = "readonly" })
                                   
                                
                               </div>
                              
                           </div>
                            <div class="form-group">
                               @Html.LabelFor(m => m.Children, new { @class = "col-sm-2 control-label" })
                               <div class="col-sm-8">
                                   @Html.TextBoxFor(model => model.Children, new { @class = "form-control", @placeholder = "Children", @readonly = "readonly" })
                                   
                                
                               </div>
                              
                           </div>




                           <div class="form-group">
                               @Html.LabelFor(m => m.Address1, new { @class = "col-sm-2 control-label" })
                               <div class="col-sm-6">
                                   @Html.TextBoxFor(model => model.Address1, new { @class = "form-control input-lg mb", @placeholder = "Address ", @readonly = "readonly" })
                                   @Html.TextBoxFor(model => model.Address2, new { @class = "form-control mb", @placeholder = "Address **", @readonly = "readonly" })
                                   @Html.TextBoxFor(model => model.Address3, new { @class = "form-control input-sm", @placeholder = "Address **", @readonly = "readonly" })

                               </div>

                             
                           </div>

                           <div class="form-group">
                               @Html.LabelFor(m => m.HomeTelephone, new { @class = "col-sm-2 control-label" })
                               <div class="col-sm-4">
                                   @Html.TextBoxFor(model => model.HomeTelephone, new { @class = "form-control", @placeholder = "Telephone No", @readonly = "readonly" })

                               </div>
                              
                           </div>
                           <div class="form-group">
                               @Html.LabelFor(m => m.PersonalEmail, new { @class = "col-sm-2 control-label" })
                               <div class="col-sm-4">
                                   @Html.TextBoxFor(model => model.PersonalEmail, new { @class = "form-control", @placeholder = "Telephone No", @readonly = "readonly" })

                               </div>
                              
                           </div>
                           <div class="form-group">
                               @Html.LabelFor(m => m.PersonalMobile, new { @class = "col-sm-2 control-label" })
                               <div class="col-sm-4">
                                   @Html.TextBoxFor(model => model.PersonalMobile, new { @class = "form-control", @placeholder = "Telephone No", @readonly = "readonly" })

                               </div>
                              
                           </div>

                           <div class="form-group">
                               @Html.LabelFor(m => m.Occupation, new { @class = "col-sm-2 control-label" })
                               <div class="col-sm-4">
                                   @Html.TextBoxFor(model => model.Occupation, new { @class = "form-control", @placeholder = "Telephone No", @readonly = "readonly" })

                               </div>
                             
                           </div>


                           <div class="form-group">
                               @Html.LabelFor(m => m.Address1, new { @class = "col-sm-2 control-label" })
                               <div class="col-sm-6">
                                   @Html.TextBoxFor(model => model.OfficeAddress1, new { @class = "form-control input-lg mb", @placeholder = "Address ", @readonly = "readonly" })
                                   @Html.TextBoxFor(model => model.OfficeAddress2, new { @class = "form-control mb", @placeholder = "Address **", @readonly = "readonly" })
                                   @Html.TextBoxFor(model => model.OfficeAddress3, new { @class = "form-control input-sm", @placeholder = "Address **", @readonly = "readonly" })

                               </div>


                           </div>

                           <div class="form-group">
                               @Html.LabelFor(m => m.OfficePhone, new { @class = "col-sm-2 control-label" })
                               <div class="col-sm-8">
                                   @Html.TextBoxFor(model => model.OfficePhone, new { @class = "form-control", @placeholder = "School Name", @readonly = "readonly" })

                                   <span class="help-block m-b-none" id="CategoryNameError"></span>
                               </div>

                             
                           </div>

                           <div class="form-group">
                               @Html.LabelFor(m => m.officeEmail, new { @class = "col-sm-2 control-label" })
                               <div class="col-sm-4">
                                   @Html.TextBoxFor(model => model.officeEmail, new { @class = "form-control", @placeholder = "Telephone No", @readonly = "readonly" })

                               </div>
                              
                           </div>

                           <div class="form-group">
                               @Html.LabelFor(m => m.NIC, new { @class = "col-sm-2 control-label" })
                               <div class="col-sm-4">
                                   @Html.TextBoxFor(model => model.NIC, new { @class = "form-control", @placeholder = "Telephone No", @readonly = "readonly" })

                               </div>
                               
                           </div>
                           <div class="form-group">
                               @Html.LabelFor(m => m.DateofBirth, new { @class = "col-sm-2 control-label" })
                               <div class="col-sm-4">
                                   @Html.TextBoxFor(model => model.datetimestring, new { @class = "form-control", @placeholder = "Not Given", @readonly = "readonly" })

                               </div>
                              
                           </div>
                           
























                           <div class="form-group">


                               @* @Html.HiddenFor(m=>m.Name)*@
                               @*        @Html.DropDownListFor(model => model.DepartmentId, ViewBag.DepartmentList as SelectList, "--select--", new { @class = "form-control" })*@

                               @*        @Html.TextBoxFor(model => model.Address, new { @class = "form-control", @placeholder ="Address" })*@
                               @*<a href="#" id="btnSubmit" class="btn btn-success btn-block">@if(Model.EmployeeId>0){<span>Update</span> }else{<span>Save</span>} </a>*@
                           </div>





                           <div class="col-sm-3" style="float:right">

                               <button type="button" class="btn btn-primary" onclick="ShowView(1)"><span class="fa fa-plus"></span> Back</button>


                               @* <a href="#" id="btnSubmit" class="btn btn-success btn-block">@if(Model.EmployeeId>0){<span>Update</span> }else{<span>Save</span>} </a>*@
                           </div>

                           </Div>
                           <Div class="col-sm-4">

                                <img src="@Url.Content(Model.ImagePath)"  alt="Image" style="height:40%;width:40%;margin-left:20%" />

                           </Div>



                       </div>
                        </form>
                        @*</form>*@
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
<script>



    var ShowView = function (bookid) {
        var Url = "/Parent/Index";
        window.location.href = Url;
    }


</script>