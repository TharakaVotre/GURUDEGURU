@model GDWEBSolution.Models.Schools.SchoolModel

@{
    ViewBag.Title = "School";
}
<div class="row">
    <div class="col-md-12">
        <h3>School</h3>
        <div class="panel panel-default">
            @*<div class="panel-heading">New School | Grade |House|EXtra Curicular|Subject|Class  </div>*@
            <div class="panel-body">
                <ul class="nav nav-tabs">
                    <li class="active"><a href="#bio" data-toggle="tab" aria-expanded="true">New School</a></li>
                    <li class=""><a href="#qualification" data-toggle="tab" aria-expanded="false">Grade</a></li>
                    <li class=""><a href="#Housee" data-toggle="tab" aria-expanded="false">House</a></li>
                    <li class=""><a href="#excactivity" data-toggle="tab" aria-expanded="false">Ex-Curicular Activities</a></li>

                    <li class=""><a href="#subjects" data-toggle="tab" aria-expanded="false">Subjects</a></li>

                    <li class=""><a href="#Classes" data-toggle="tab" aria-expanded="false">Class</a></li>
                    <li class=""><a href="#Admin" data-toggle="tab" aria-expanded="false">School Admin</a></li>

                    @*<li class="disabled"><a>Disabled</a></li>
                        <li class="dropdown">
                            <a class="dropdown-toggle" data-toggle="dropdown" href="#" aria-expanded="false">
                          Dropdown <span class="caret"></span>
                        </a>
                            <ul class="dropdown-menu">
                                <li><a href="#dropdown1" data-toggle="tab">Action</a></li>
                                <li class="divider"></li>
                                <li><a href="#dropdown2" data-toggle="tab">Another action</a></li>
                            </ul>
                        </li>*@
                </ul>
                <br>
                <div id="myTabContent" class="tab-content">
                    <div class="tab-pane fade active in" id="bio">
 <form enctype="multipart/form-data">
    @Html.AntiForgeryToken()
                        @*<form id="FormNewdata" class="form-horizontal">*@
                            <div class="form-horizontal">


                                @*<form id="FrmANT" action="/School/Create"
                enctype="multipart/form-data"
                method="post"
                >*@
                                <br />
                                @Html.HiddenFor(model => model.SchoolId)
                                @*<div class="form-group">
                                   
                                    @Html.LabelFor(m => m.SchoolId, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(model => model.SchoolId, new { @class = "form-control", @placeholder = "School Id" })
                                        <span class="help-block m-b-none" id="CategoryNameError"></span>
                                        @Html.ValidationMessageFor(model => model.SchoolId, null, new { @class = "text-danger" })
                                    </div>
                                </div>*@

                                <div class="form-group">
                                    @Html.LabelFor(m => m.SchoolName, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(model => model.SchoolName, new { @class = "form-control", @placeholder = "School Name" })
                                       
                                    </div>
                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.SchoolName, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                               
                             


                                <div class="form-group">
                                    @Html.LabelFor(m => m.Province, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-3">
                                        @Html.DropDownListFor(model => model.Province, ViewBag.ProvinceDrpDown as SelectList, "", new { @class = "form-control", @placeholder = "Province",@onchange = "loadschoolDisctrict(this.value)" })
                                    </div>
                                    <div class="col-sm-1">
                                        @Html.ValidationMessageFor(model => model.Province, null, new { @class = "text-danger" })
                                    </div>

                                    @Html.LabelFor(m => m.District, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-3">
                                        @Html.DropDownListFor(model => model.District, ViewBag.DistrictDrpDown as SelectList, "", new { @class = "form-control", @placeholder = "School Group" })
                                    </div>
                                    <div class="col-sm-1">
                                        @Html.ValidationMessageFor(model => model.SchoolGroup, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.SchoolGroup, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-3">
                                        @Html.DropDownListFor(model => model.SchoolGroup, ViewBag.SGroupDrpDown as SelectList, "", new { @class = "form-control", @placeholder = "School Group" })
                                    </div>
                                    <div class="col-sm-1">
                                        @Html.ValidationMessageFor(model => model.SchoolGroup, null, new { @class = "text-danger" })
                                    </div>

                                    @Html.LabelFor(m => m.SchoolRank, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-3">
                                        @Html.DropDownListFor(model => model.SchoolRank, ViewBag.RankDrpDown as SelectList, "", new { @class = "form-control", @placeholder = "School Group" })
                                    </div>
                                    <div class="col-sm-1">
                                        @Html.ValidationMessageFor(model => model.SchoolGroup, null, new { @class = "text-danger" })
                                    </div>
                                </div>

                              

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Division, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-3">
                                        @Html.DropDownListFor(model => model.Division, ViewBag.DivisionDrpDown as SelectList, "", new { @class = "form-control", @placeholder = "School Group" })
                                    </div>
                                    <div class="col-sm-1">
                                        @Html.ValidationMessageFor(model => model.SchoolGroup, null, new { @class = "text-danger" })
                                    </div>

                                    @Html.LabelFor(m => m.SchoolCategory, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-3">
                                        @Html.DropDownListFor(model => model.SchoolCategory, ViewBag.SchoolCategoryDrpDown as SelectList, "", new { @class = "form-control", @placeholder = "Name of School type" })
                                    </div>
                                    <div class="col-sm-1">
                                        @Html.ValidationMessageFor(model => model.SchoolCategory, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                               


                                <div class="form-group">
                                    @Html.LabelFor(m => m.Address1, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-6">
                                        @Html.TextBoxFor(model => model.Address1, new { @class = "form-control input-lg mb", @placeholder = "Address " })
                                        <div class="col-sm-12">
                                        @Html.ValidationMessageFor(model => model.Address1, null, new { @class = "text-danger" })
                                    </div>

                                        @Html.TextBoxFor(model => model.Address2, new { @class = "form-control mb", @placeholder = "Address **" })
                                        @Html.TextBoxFor(model => model.Address3, new { @class = "form-control input-sm", @placeholder = "Address **" })
                                       
                                    </div>
                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(m => m.Telephone, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(model => model.Telephone, new { @class = "form-control", @placeholder = "Telephone No" })
                             
                                    </div>
                                    <div class="col-sm-1">
                                        @Html.ValidationMessageFor(model => model.Telephone, null, new { @class = "text-danger" })
                                    </div>

                                    @Html.LabelFor(m => m.MinuteforPeriod, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(model => model.MinuteforPeriod, new { @class = "form-control", @placeholder = "Minutes for a Period" })

                                    </div>
                                    <div class="col-sm-1">
                                        @Html.ValidationMessageFor(model => model.MinuteforPeriod, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                             

                                <div class="form-group">
                                    @Html.LabelFor(m => m.File, new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(m => m.File, new { type = "file", @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.File, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.LogoFile, new { @class = "control-label col-md-2" })
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(m => m.LogoFile, new { type = "file", @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.File, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                                <div class="form-group">
                                    @Html.LabelFor(m => m.WebAddress, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-6">
                                        @Html.TextBoxFor(model => model.WebAddress, new { @class = "form-control", @placeholder = "School Website Names" })
                                       
                                    </div>
                                     <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.WebAddress, null, new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Email, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-6">
                                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "Email Address" })
                                        
                                    </div>
                                      <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.Email, null, new { @class = "text-danger" })
                                    </div>
                                </div>











                                <div class="form-group">
                                    <div class="col-sm-8 col-sm-offset-2">
                                        @*<button class="btn btn-default" type="submit">Cancel</button>*@
                                        @*<a href="#" id="btnCreateTeacher" class="btn btn-primary">Save</a>*@
                                        <input type="submit" class="btn btn-primary" />
                                     @*   <button type="submit" value="Save" id="btnSubmit" onsubmit="abc()" class="btn btn-primary"><span class="fa fa-bookmark"></span> Save</button>*@
                                        
                                        <a href="~/School/Index" class="btn btn-warning"><span class="glyphicon glyphicon-step-backward"></span>Go Back</a>

                                    </div>
                                </div>
                            </div>
                            
                        </form>
                    </div>
                    <div class="tab-pane fade" id="qualification">
                        @{Html.RenderPartial("Grade");}

                        <div id="showgrade">
                            @*  @{Html.RenderAction("ShowTeacherQualificatoin");}*@
                            @{ Html.RenderAction("ShowSchoolGrade", new { ShoolId = "0" }); }
                        </div>

                    </div>
                    <div class="tab-pane fade" id="Housee">
                        @{Html.RenderPartial("House");}
                        <div id="showHouse">
                              @{Html.RenderAction("ShowSchooHouse", new { ShoolId = "0" });}
                          
                        </div>
                      
                    </div>
                    <div class="tab-pane fade" id="excactivity">
                        @{Html.RenderPartial("SchoolExtra");}
                        <div id="showexactivity">
                            @{Html.RenderAction("ShowSchooEXActivity", new { ShoolId = "0" });}

                        </div>

                    </div>

                    <div class="tab-pane fade" id="subjects">
                        @{Html.RenderPartial("Subject");}
    <div id="showSubjects">
        @*@{Html.RenderAction("ShowSchooSubject", new { ShoolId = "0" });}*@

    </div>
                     
                    </div>

                    <div class="tab-pane fade" id="Classes">
                        @{Html.RenderPartial("Class");}
                        <div id="showclasses">
                            @{Html.RenderAction("ShowSchooClasses", new { ClasslId = "0" });}

                        </div>

                    </div>

                    <div class="tab-pane fade" id="Admin">
                        @{Html.RenderPartial("SchoolAdminC");}
                        <div id="showadmins">
                           @{Html.RenderAction("ShowSchoolAdmins", new { SchoolId = "0" });}

                        </div>

                    </div>



                </div>
            </div>
        </div>
    </div>
</div>

<div id="myModal" class="modal fade" role="dialog" tabindex="-1" aria-labelledby="myModalLabel">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content" id="MyModelBody">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Error !</h4>
            </div>
            <div class="modal-body">
                <label id="ErrorLable" class="control-label" style="color: #e83a3a"></label>
            </div>
        </div>
    </div>
</div>

<div id="SuccesModel" class="modal fade" role="dialog" tabindex="-1" aria-labelledby="myModalLabel">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content" id="SuccessModelBody">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Successful !</h4>
            </div>
            <div class="modal-body">
                <label id="SuccesLable" class="control-label" style="color: #3bc91f"></label>
            </div>
        </div>
    </div>
</div>

<div id="deleteModel" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content" id="DeleteModelBody">
        </div>
    </div>
</div>


    <script >

        var abc = function () {
            $("#SuccesLable").text("School Added");
            // $("#btnAddQualification").prop('value', 'Save');
            $("#SuccesModel").modal("show");

        }


        var loadschoolDisctrict = function (value) {


            var selectedItem = value;

            var ddlStates = $("#District");
            //var statesProgress = $("#states-loading-progress");
            //statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.RouteUrl("SchoolDistrict"))",
            data: { "ProvinceId": selectedItem },
            success: function (data) {
                ddlStates.html('');
                ddlStates.append($('<option></option>').val("").html(""));
                $.each(data, function (ActivityCode, option) {
                    ddlStates.append($('<option></option>').val(option.DistrictId).html(option.DistrictName));
                });

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve states.');

            }
        });




        }


     //$(function(){
     //    $("input#btnSubmit").on('click', function () {
     //        $("#SuccesLable").text("Grade Added");
     //        // $("#btnAddQualification").prop('value', 'Save');
     //        $("#SuccesModel").modal("show");
     //    });
     //});
    </script>


   


<script>

   
 


    var ShowView = function (bookid) {
        var Url = "/School/Index" ;
        window.location.href = Url;
    }


    $(function () {
        // This will make every element with the class "date-picker" into a DatePicker element
        // $("#DateOfBirth").datepicker();
         //  $("#Address1").datetimepicker();
        // $("#CreatedDate").datetimepicker();
      //  $("#Address1").timepicker();




    });


    </script>


<script type="text/javascript">

    $(function () {
        // When your form is submitted
        $("form").submit(function (e) {
            // Prevent the default behavior
            e.preventDefault();
            var acl = this;






            // Serialize your form
            var formData = new FormData($(this)[0]);

            // Make your POST
            $.ajax({

                type: "POST",
                url: "/School/Create",
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function (result) {

                    //$("#loaderDiv").hide();
                    // $("#myModal").modal("hide");
                    if (result != "Exception" && result != "Exists" && result != "error" && result != "UExists") {
                        debugger

                        acl.reset();

                        //window.location.href = "/Teacher/Create";





                        // var res = result.split("!");
                        //  $('#ResultDIV').load('/Teacher/ShowTeacherQualificatoin', ShowTeacherQualificatoinAction);
                        // $('#showexactivity').load('/Student/ShowstudentExactivty?SchoolId=' + res[0] + '&StudentId=' + res[1]);

                        //window.location.href = "/Parent/Create?id=1";
                        //alert("gg");
                        $("#SuccesLable").text("School Created");
                        // $("#btnAddQualification").prop('value', 'Save');
                        $("#SuccesModel").modal("show");
                    }
                    else if (result == "Exception") {
                        debugger
                        //$("#ErrorUName").prop('value', 'User Name Already Exits');
                        $("#ErrorLable").text("Exception Error Occurd");
                        //$("#btnAddQualification").prop('value', 'Save');
                        $("#myModal").modal("show");
                    }
                    else if (result == "Exists") {

                        //$("#ErrorUName").prop('value', 'User Name Already Exits');
                        $("#ErrorLable").text("There is already a User with this Student Id in this School");
                        //$("#btnAddQualification").prop('value', 'Save');
                        $("#myModal").modal("show");


                    }

                    else if (result == "UExists") {

                        //$("#ErrorUName").prop('value', 'User Name Already Exits');
                        $("#ErrorLable").text("There is already a User with this User Id ");
                        //$("#btnAddQualification").prop('value', 'Save');
                        $("#myModal").modal("show");


                    }

                    else {

                    }

                }

            })
        });
    })



</script>





