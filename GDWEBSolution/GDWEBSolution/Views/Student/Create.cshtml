@model GDWEBSolution.Models.Student.StudentModel


<div class="row">
    <div class="col-md-12">
        <h3>Student</h3>
        <div class="panel panel-default">
            <div class="panel-heading">New Student | Optional Subject |EXtra Curicular  </div>
            <div class="panel-body">
                <ul class="nav nav-tabs">
                    <li class="active"><a href="#bio" data-toggle="tab" aria-expanded="true">New Student</a></li>
                    <li class=""><a href="#OptionalSubject" data-toggle="tab" aria-expanded="false">Optional Subject</a></li>
                    <li class=""><a href="#excactivity" data-toggle="tab" aria-expanded="false">EXtra Curicular</a></li>
                    @*<li class="disabled"><a>Disabled</a></li>
                        <li class="dropdown">
                            <a class="dropdown-toggle" data-toggle="dropdown" href="#" aria-expanded="false">
                          Dropdown <span class="caret"></span>
                        </a>
                            <ul class="dropdown-menu">
                                <li><a href="#dropdown1" data-toggle="tab">Action</a></li>
                                <li class="divider"></li>
                                <li><a href="#dropdown2" data-toggle="tab">Another action</a></li>
                            </ul>
                        </li>*@
                </ul>
                <br>
                <div id="myTabContent" class="tab-content">
                    <div class="tab-pane fade active in" id="bio">
                        @using (Html.BeginForm("Create", "Student",
    FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            @*<form id="FrmANT" class="form-horizontal">*@
                            <div class="form-horizontal">


                                @*<form id="FrmANT" action="/School/Create"
                                    enctype="multipart/form-data"
                                    method="post"
                                    >*@
                                <br />
                                @Html.HiddenFor(model => model.SchoolId)
                                @*<div class="form-group">

                                        @Html.LabelFor(m => m.SchoolId, new { @class = "col-sm-2 control-label" })
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(model => model.SchoolId, new { @class = "form-control", @placeholder = "School Id" })
                                            <span class="help-block m-b-none" id="CategoryNameError"></span>
                                            @Html.ValidationMessageFor(model => model.SchoolId, null, new { @class = "text-danger" })
                                        </div>
                                    </div>*@

                                 <div class="form-group">
                                    @Html.LabelFor(m => m.StudentId, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(model => model.StudentId, new { @class = "form-control", @placeholder = "Student Id" })
                                      
                                    </div>
                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.StudentId, null, new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.StudentName, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(model => model.StudentName, new { @class = "form-control", @placeholder = "Student Name" })
                                       
                                    </div>
                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.StudentName, null, new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.SchoolName, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-8">
                                        @Html.DropDownListFor(model => model.SchoolIdw, ViewBag.SchoolDrpDown as SelectList, "", new { @class = "form-control", @placeholder = "Student", @onchange = "loadEXactivsess(this.value)" })
                                        
                                    </div>

                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.SchoolId, null, new { @class = "text-danger" })
                                    </div>
                                </div>

                               


                                

                                <div class="form-group">
                                    @Html.LabelFor(m => m.DateOfBirth, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-8">
                                        @Html.TextBoxFor(model => model.DateOfBirth, new { @class = "form-control", @placeholder = "Date of Birth" })
                                        <span class="help-block m-b-none" id="CategoryNameError"></span>
                                    </div>
                                </div>



                                <div class="form-group">
                                    @Html.LabelFor(m => m.HouseId, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-4">
                                        @Html.DropDownListFor(model => model.HouseId, ViewBag.HouseDrpDown as SelectList, "", new { @class = "form-control", @placeholder = "Province" })
                                    </div>
                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.HouseId, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.GradeId, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-4">
                                        @Html.DropDownListFor(model => model.GradeId, ViewBag.SGradeDrpDown as SelectList, "", new { @class = "form-control", @placeholder = "School Group",@onchange = "loadClass(this.value)" })
                                    </div>
                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.GradeId, null, new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.ClassId, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-4">
                                        @Html.DropDownListFor(model => model.ClassId, ViewBag.classDrpDown as SelectList, "", new { @class = "form-control", @placeholder = "School Group" })
                                    </div>
                                    <div class="col-sm-2">
                                        @Html.ValidationMessageFor(model => model.ClassId, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Gender, new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-1">
                                        @Html.Label("Male")
                                        @Html.RadioButtonFor(m => m.Gender, "M")
                                        </div>
                                    <div class="col-sm-3">
                                        @Html.Label("FeMale")
                                        @Html.RadioButtonFor(m => m.Gender, "F")
                                        </div >
                                        </div>





                                        <div class="form-group">
                                            @Html.LabelFor(m => m.StudentImageFile, new { @class = "control-label col-md-2" })
                                            <div class="col-md-4">
                                                @Html.TextBoxFor(m => m.StudentImageFile, new { type = "file", @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.StudentImageFile, "", new { @class = "text-danger" })
                                            </div>
                                        </div>












                                        <div class="form-group">


                                            @* @Html.HiddenFor(m=>m.Name)*@
                                            @*        @Html.DropDownListFor(model => model.DepartmentId, ViewBag.DepartmentList as SelectList, "--select--", new { @class = "form-control" })*@

                                            @*        @Html.TextBoxFor(model => model.Address, new { @class = "form-control", @placeholder ="Address" })*@
                                            @*<a href="#" id="btnSubmit" class="btn btn-success btn-block">@if(Model.EmployeeId>0){<span>Update</span> }else{<span>Save</span>} </a>*@
                                        </div>





                                        <div class="form-group">
                                            <div class="col-sm-8 col-sm-offset-2">
                                                @*<button class="btn btn-default" type="submit">Cancel</button>*@
                                                @*<a href="#" id="btnCreateTeacher" class="btn btn-primary">Save</a>*@
                                                <button type="submit" value="Save" id="btnSubmit" onclick="" class="btn btn-primary"><span class="fa fa-bookmark"></span> Save</button>
                                            </div>
                                        </div>
                                    </div>
                        }
                        @*</form>*@
                    </div>
                    <div class="tab-pane fade" id="qualification">
                      

                        <div id="showgrade">
                          
                        </div>

                    </div>
                    <div class="tab-pane fade" id="Housee">
                      
                        <div id="showHouse">
                         

                        </div>

                    </div>
                    <div class="tab-pane fade" id="excactivity">
                       
                        <div id="showexactivity">
                            @{Html.RenderPartial("StudentEXtra");}
                           

                        </div>

                    </div>

                    <div class="tab-pane fade" id="subjects">
                     
                        <div id="showSubjects">
                          

                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="myModal" class="modal fade" role="dialog" tabindex="-1" aria-labelledby="myModalLabel">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content" id="MyModelBody">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Error !</h4>
            </div>
            <div class="modal-body">
                <label id="ErrorLable" class="control-label" style="color: #e83a3a"></label>
            </div>
        </div>
    </div>
</div>

<div id="SuccesModel" class="modal fade" role="dialog" tabindex="-1" aria-labelledby="myModalLabel">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content" id="SuccessModelBody">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Successful !</h4>
            </div>
            <div class="modal-body">
                <label id="SuccesLable" class="control-label" style="color: #3bc91f"></label>
            </div>
        </div>
    </div>
</div>

<div id="deleteModel" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content" id="DeleteModelBody">
        </div>
    </div>
</div>

@*<script>

    $(function () {
        $("#StudentId").timepicker();

    }
        );
</script>*@

<script>

    var loadSgrade = function (value) {
        debugger
        //     $('#myTabContent').load('/Student/Createe?SchoolId=' + value);

        window.location.href = '@Url.Action("Create", "Student", new { SchoolId = "ID" })'.replace("ID", value);


    }

    var loadClass = function (value) {
        $("#showStateLga").show();
        var selectedItem = value;
        var SchoolId = $("#SchoolIdw").val();

        var ddlStates = $("#ClassId");
        //var statesProgress = $("#states-loading-progress");
        //statesProgress.show();
        $.ajax({
            cache: false,
            type: "GET",
            url: "@(Url.RouteUrl("Studentclass"))",
            data: { "GradeId": selectedItem, "SchoolId": SchoolId },
            success: function (data) {
                ddlStates.html('');
                ddlStates.append($('<option></option>').val("").html(""));
                $.each(data, function (ActivityCode, option) {

                    ddlStates.append($('<option></option>').val(option.ClassId).html(option.ClassName));
                });

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve states.');

            }
        });
      }


    var loadEXactivsess = function (value) {

        //    $(".div123 *").prop('disabled', true);


        var selectedItem = value;

        var ddlStates = $("#GradeId");
        //var statesProgress = $("#states-loading-progress");
        //statesProgress.show();
        $.ajax({
            cache: false,
            type: "GET",
            url: "@(Url.RouteUrl("Studentgrade"))",
            data: { "SchoolId": selectedItem },
            success: function (data) {
                ddlStates.html('');
                ddlStates.append($('<option></option>').val("").html(""));
                $.each(data, function (ActivityCode, option) {
                    ddlStates.append($('<option></option>').val(option.GradeId).html(option.GradeName));
                });

            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve states.');

            }
        });
       }


    </script>

<script type="text/javascript">
    $(function () {
        // This will make every element with the class "date-picker" into a DatePicker element
        $("#DateOfBirth").datepicker();
    });
</script>